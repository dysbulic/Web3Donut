{"version":3,"sources":["libs/databaseLib.js","state/index.js","libs/access_test.js","libs/config.js","components/commons/copyableText.js","libs/Web3Context.jsx","components/systems.js","components/ipfsTools.js","components/header.js","libs/images/raidGuildLogo.png","components/D3Graphs/donut.js","components/D3Graphs/collapsibleTree.js","components/filters.js","components/objectCreation.js","components/databaseTools.js","components/databaseCard.js","components/databaseForm.js","components/editMode.js","components/databaseCreate.js","components/databaseImport.js","components/databaseLocal.js","App.js","reportWebVitals.js","index.js"],"names":["orbitdb","ipfsNode","programs","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actions","SET_USER","SET_DB","SET_DBGUIDE","SET_DBDAGTEST","SET_DBUSERS","SET_IPFS","SET_ORBITDB","SET_PROGRAMS","SET_PROGRAMS_LOADING","AccessController","require","io","abi","DaoHausController","ipfs","web3","address","defaultAccount","_ipfs","contractAddress","this","a","indexOf","split","read","access","JSON","parse","console","log","contract","Contract","entry","payload","account","methods","members","call","memberRequest","identity","write","stringify","cid","options","Error","warn","config","repo","relay","enabled","hop","active","EXPERIMENTAL","pubsub","Addresses","Swarm","AccessControllers","addAccessController","initIPFS","IPFS","create","CONFIG","initOrbitDB","OrbitDB","createInstance","getAllDatabases","feed","accessController","id","load","iterator","limit","collect","getDB","open","db","events","on","result","map","e","table","ipldExplorer","url","window","focus","addDatabase","dbname","type","add","name","added","Date","now","createDatabase","permissions","provider","extra","toString","removeDatabase","hash","remove","recreateCid","CID","isCID","getDagCid","path","dag","get","dataR","getDagObject","cat","getIpfs","dagPreparation","data","put","addIpfs","getTreeIpfs","results","tree","item","push","getFromIpfs","stream","CopyableText","props","useState","copied","setCopied","text","closeDelay","isOpen","label","colorScheme","aria-label","icon","Copy","onClick","copyText","document","querySelector","range","createRange","selectNode","getSelection","addRange","execCommand","copyToClipboard","chainUrls","1","rpc","explorer","chainId","3","4","5","42","getRPCUrl","Web3Context","providerChainId","loading","connectWeb3","useWeb3Context","providerOptions","walletconnect","package","WalletConnectProvider","web3Modal","Web3Modal","cacheProvider","Web3ContextProvider","setWeb3State","setLoading","setProvider","useCallback","prov","initialCall","ethers","providers","Web3Provider","Web3","currentProvider","parseInt","getSigner","getAddress","webState","error","message","connect","modalProvider","newAcc","prev","useEffect","ethereum","autoRefreshOnNetworkChange","cachedProvider","Systems","appState","dispatch","completeUser","setCompleteUser","fetchDB","reverse","entries","Object","keys","all","key","query","fullOp","initDatabases","React","then","ipfsStatus","databases","orbitdbStatus","publicKey","SystemElement","fontSize","spacing","fontWeight","isLoading","CheckCircle","func","Link","isDisabled","slice","w","border","alignItems","user","IPFSTools","useDisclosure","onOpen","onClose","setResult","caseSelected","setCaseSelected","getElementById","decode","TextDecoder","selectedFile","files","reader","FileReader","readAsText","onloadend","is","Case","placeholder","getCidIPFS","SearchIPFS","uploadDag","click","Attachment","variant","hidden","addFileIpfs","checkCID","size","placement","bg","borderBottomWidth","color","Header","history","useHistory","length","entriesDAGtest","d3","Donut","width","radius","format","arc","startAngle","d","x0","endAngle","x1","padAngle","Math","min","padRadius","innerRadius","y0","outerRadius","max","y1","dataOriginal","dataGraphed","scaleOrdinal","quantize","interpolateRainbow","chart","root","hierarchy","sum","sort","b","partition","PI","height","each","current","svg","select","append","attr","style","forEach","val","g","div","selectAll","descendants","join","depth","parent","arcVisible","evt","transition","duration","Boolean","clicked","ancestors","labelVisible","labelTransform","target","logo","event","p","datum","t","tween","i","interpolate","filter","getAttribute","attrTween","x","y","node","display","justifyContent","margin","CollapsibleTree","dy","diagonal","linkHorizontal","nodeSize","_children","gLink","gNode","update","source","altKey","nodes","links","left","right","eachBefore","ResizeObserver","nodeEnter","enter","clone","lower","merge","exit","link","linkEnter","o","protocolsData","Filters","setData","search","setSearch","setResults","setDataGraphed","vis","setVis","dataCid","dagObj","dagObject","branch","obj","findResults","arr","term","matches","Array","isArray","toLowerCase","includes","childResults","assign","exploreTree","treeSearch","undefined","res","handleDatabase","getLatestDB","onChange","disabled","default","pointerEvents","Search2","FieldsTable","fields","deleteItem","idx","Delete","ObjectCreator","setFields","createObject","fromEntries","k","createEntry","className","fieldsCurrent","index","find","splice","wrap","checked","setWrap","nameProject","DBTools","includeWeb3Account","setIncludeWeb3Account","wrappedCid","valueW","timestamp","ipfsCid","string","set","_id","fl","parseFloat","inc","wrapAndLog","grant","extension","pop","readyState","handleSelection","selection","_type","uploadFileDB","giveAccess","canWrite","isChecked","DBCard","tip","setTip","methodSelector","setMethodSelector","_write","ExternalLink","retrieve","DatabaseForm","showDatabase","setShowDatabase","databasesData","dbDAGtest","dbGuide","entriesGuide","dbUsers","entriesUser","chosenDB","entriesUsers","EditModal","setDb","setEntries","href","rel","DatabaseCreate","createDB","setCreateDB","createNewDB","nameDB","c","selected","DatabaseImport","setOpen","DatabaseLocal","items","setItems","editModal","setEditModal","refresh","allPrograms","align","ArrowBack","Time","Edit","App","program","state","action","SET_PROGRAM","SET_PROGRAM_LOADING","backgroundColor","exact","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ioxBAWIA,EACAC,EAEAC,E,mECZSC,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,GAAlD,SACGC,KAIQI,EAAgB,kBAAMC,qBAAWV,IAEjCW,EACL,CACJC,SAAU,YAFDD,EAIP,CACFE,OAAQ,UALCF,EAOH,CACNG,YAAY,eARHH,EAUD,CACRI,cAAc,iBAXLJ,EAaH,CACNK,YAAY,eAdHL,EAgBF,CACPM,SAAU,WACVC,YAAa,eAlBJP,EAoBD,CACRQ,aAAc,eACdC,qBAAsB,wB,2JClCpBC,EAAmBC,EAAQ,KAG3BC,EAAKD,EAAQ,MACbE,EAAM,CAAC,CAAC,KAAO,WACrB,gBAAkB,OAClB,SAAU,EACV,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,eACpC,CAAC,KAAO,UAAU,KAAO,UACzB,CAAC,KAAO,UAAU,KAAO,QACzB,CAAC,KAAO,OAAO,KAAO,UACtB,CAAC,KAAO,UAAU,KAAO,uBACzB,CAAC,KAAO,UAAU,KAAO,WACzB,KAAO,UACP,OAAS,CAAC,CAAC,KAAO,UAAU,KAAO,KACnC,UAAW,IAEUC,E,kDACjB,WAAaC,EAAMC,EAAMC,EAASC,GAAiB,IAAD,8BAChD,gBACKC,MAAQJ,EACb,EAAKC,KAAOA,EACZ,EAAKH,IAAMA,EACX,EAAKO,gBAAkBH,EACvB,EAAKC,eAAiBA,EAN0B,E,yCAWlD,WACE,OAAOG,KAAKD,kB,yDAId,WAAYH,GAAZ,eAAAK,EAAA,0DACML,EADN,iCAGuC,IAA7BA,EAAQM,QAAQ,WAAkBN,EAAUA,EAAQO,MAAM,KAAK,IAHzE,SAI2BZ,EAAGa,KAAKJ,KAAKF,MAAOF,GAJ/C,OAIYS,EAJZ,OAKML,KAAKD,gBAAkBM,EAAON,gBAC9BC,KAAKR,IAAMc,KAAKC,MAAMF,EAAOb,KANnC,kDAQMgB,QAAQC,IAAI,uCAAZ,MARN,QAWET,KAAKU,SAAW,IAAIV,KAAKL,KAAKgB,SAASX,KAAKR,IAAKQ,KAAKD,iBAXxD,0D,qHAcA,WAAgBa,GAAhB,eAAAX,EAAA,yDACEO,QAAQC,IAAIG,GACRA,EAAMC,QAAQtC,MAAMuC,QAF1B,yCAGW,8BAHX,uBAK8Bd,KAAKU,SAASK,QAAQC,QAAQJ,EAAMC,QAAQtC,MAAMuC,SAASG,OALzF,YAKQC,EALR,gCAOIV,QAAQC,IAAIS,GAPhB,mBASW,GATX,kCAWW,GAXX,iD,iHAeA,WAAab,EAAQc,GAArB,SAAAlB,EAAA,0F,kHAGA,4BAAAA,EAAA,+EAGgBV,EAAG6B,MAAMpB,KAAKF,MAAO,WAAY,CAC3CC,gBAAiBC,KAAKJ,QACtBJ,IAAKc,KAAKe,UAAUrB,KAAKR,IAAK,KAAM,KAL1C,OAGI8B,EAHJ,sDAQId,QAAQC,IAAI,uCAAZ,MARJ,gCAWS,CAAEb,QAAS0B,IAXpB,yD,wEAvCA,WAAqB,MAAO,c,2DAqD5B,WAAqBzD,EAAS0D,GAA9B,oEACOA,EAAQxB,iBAAoBwB,EAAQ3B,QAD3C,sBAEU,IAAI4B,MAAM,yCAFpB,UAIOD,EAAQ5B,KAJf,sBAKU,IAAI6B,MAAM,8BALpB,cAOOD,EAAQ1B,gBACXW,QAAQiB,KAAK,kCARjB,kBAWS,IAAIhC,EACT5B,EAAQiC,MACRyB,EAAQ5B,KACR4B,EAAQxB,gBACRwB,EAAQ1B,iBAfZ,2C,8DA/D2CR,G,mCCShCqC,EA1BA,CACbhC,KAAM,CAIJiC,KAAM,cACNC,MAAO,CAAEC,SAAS,EAAMC,IAAK,CAAED,SAAS,EAAME,QAAQ,IACtDC,aAAc,CACZC,QAAQ,GAEVP,OAAQ,CACNQ,UAAW,CACTC,MAAO,CAIL,gEACA,gEACA,0EHXVC,IAAkBC,oBAAoB,CACpChD,iBAAkBI,IAQb,IAAM6C,EAAQ,uCAAG,sBAAArC,EAAA,yDAClBnC,EADkB,gCAEHyE,IAAKC,OAAOC,EAAO/C,MAFhB,OAEpB5B,EAFoB,uCAIfA,GAJe,2CAAH,qDAOR4E,EAAW,uCAAG,WAAOhD,GAAP,SAAAO,EAAA,yDACrBpC,EADqB,gCAGrB8E,IAAQC,eACNlD,EACA,CACEiC,KAAM,YACNS,wBAPiB,OAEvBvE,EAFuB,qBAYzB2C,QAAQC,IAAI,mBAAoB5C,GAZP,kBAalBA,GAbkB,2CAAH,sDAgBXgF,EAAe,uCAAG,sBAAA5C,EAAA,yDACzBlC,IAAYF,EADa,gCAEVA,EAAQiF,KAAK,mBAAoB,CAChDC,iBAAkB,CAAE3B,MAAO,CAACvD,EAAQsD,SAAS6B,KAC7CR,QAAQ,IAJiB,cAE3BzE,EAF2B,gBAMrBA,EAASkF,OANY,gCAS3BlF,EACEA,EAASmF,SAAS,CAAEC,OAAQ,IAAKC,UAC/B,IAXuB,2CAAH,qDAefC,EAAK,uCAAG,WAAOzD,GAAP,eAAAK,EAAA,0DAEhBpC,EAFgB,gCAGNA,EAAQyF,KAAK1D,GAHP,cAGjB2D,EAHiB,gBAIXA,EAAGN,OAJQ,OAKjBM,EAAGC,OAAOC,GAAG,cAAc,WACzBjD,QAAQC,IAAI,aAAc8C,GAC1B,IAAMG,EACJH,EAAGL,SAAS,CAAEC,OAAQ,IAAKC,UAC1BO,KAAI,SAAAC,GAAC,OAAIA,EAAE/C,QAAQtC,SAEtBiC,QAAQqD,MAAMH,MAXC,gCAcZH,GAdY,2CAAH,sDAiBX,SAASO,EAAalE,GAC3B,IAAImE,EAAG,4CAAwCnE,GAC5CmE,GAAKC,OAAOV,KAAKS,EAAK,UAAUE,QAG9B,IAAMC,GAAW,uCAAG,WAAOtE,GAAP,mBAAAK,EAAA,sEACMoD,EAAMzD,GADZ,uBACjBuE,EADiB,EACjBA,OAAQC,EADS,EACTA,KADS,kBAElBrG,EAASsG,IAAI,CAClBC,KAAMH,EACNC,OACAxE,UACA2E,MAAOC,KAAKC,SANW,2CAAH,sDAUXC,GAAc,uCAAG,WAAOJ,EAAMF,EAAMO,EAAaC,EAAUC,GAA1C,mBAAA5E,EAAA,2DAGpB0E,EAHoB,OAIrB,WAJqB,OAOrB,YAPqB,OAerB,YAfqB,6BAKxB5B,EAAmB,CAAE3B,MAAO,CAAC,MALL,mCAQxBG,EAAU,CACR7B,KAAM5B,EAAU6B,KAAMiF,EACtB7E,gBAAiB8E,EACjB9B,iBAAkB,CAAEqB,KAAM,kBAXJ,mCAgBxBrB,EAAmB,CACjBqB,KAAK,UAAWhD,MAAO,CAACvD,EAAQsD,SAAS6B,KAjBnB,mCAqBxBD,EAAmB,CAAE3B,MAAO,CAACvD,EAAQsD,SAAS6B,KArBtB,iCA0BzBzB,EA1ByB,kCA2Bf1D,EAAQ2E,OAAO8B,EAAMF,EAAM,CAAE7C,YA3Bd,QA2B1BgC,EA3B0B,gDA6Bf1F,EAAQ2E,OAAO8B,EAAMF,EAAM,CAAErB,qBA7Bd,QA6B1BQ,EA7B0B,wCAgCrBxF,EAASsG,IAAI,CAClBC,OACAF,OACAxE,QAAS2D,EAAG3D,QAAQkF,WACpBP,MAAOC,KAAKC,SApCc,4CAAH,8DAwCdM,GAAc,uCAAG,WAAOC,GAAP,SAAA/E,EAAA,6DAC5BO,QAAQC,IAAI,WAAYuE,GADI,kBAErBjH,EAASkH,OAAOD,IAFK,2CAAH,sDASrBE,GAAc,SAAC5D,GAAD,OAClB,IAAI6D,IAAI7D,IAGK8D,GAAUD,IAAVC,MAEFC,GAAS,uCAAG,WAAO/D,EAAKgE,GAAZ,eAAArF,EAAA,6DACnBmF,GAAM9D,KACRA,EAAM4D,GAAY5D,IAFG,SAILxD,EAASyH,IAAIC,IAAIlE,EAAK,CAAEgE,SAJnB,YAInBG,EAJmB,iDAMdA,GANc,OAQrBjF,QAAQC,IAAI,4BARS,2CAAH,wDAYTiF,GAAY,uCAAG,WAAOpE,GAAP,2BAAArB,EAAA,uFAECnC,EAAS6H,IAAIrE,EAAIwD,aAFlB,gIAETpB,EAFS,oBAGjBA,GAHiB,qXAAH,sDAWZkC,GAJK,uCAAG,WAAOtE,GAAP,SAAArB,EAAA,sEACbnC,EAAS0H,IAAIlE,GADA,mFAAH,sDAMLuE,GAAc,uCAAG,WAAOC,GAAP,SAAA7F,EAAA,sEAEtBnC,EAASyH,IAAIQ,IAAID,GAFK,mFAAH,sDAKdE,GAAO,uCAAG,WAAOF,GAAP,iBAAA7F,EAAA,sEACCnC,EAASuG,IAAIyB,GADd,uBACbxE,EADa,EACbA,IACRd,QAAQC,IAAI,QAASa,GAFA,kBAGdA,GAHc,2CAAH,sDAMP2E,GAAW,uCAAG,WAAO3E,EAAKgE,GAAZ,+BAAArF,EAAA,6DACrBmF,GAAM9D,KACRA,EAAM4D,GAAY5D,IAEd4E,EAAU,GAJS,SAKNpI,EAASyH,IAAIY,KAAK7E,EAAK,CAAEgE,SALnB,OAKnBa,EALmB,wCAMAA,GANA,2HAMRC,EANQ,EAOvBF,EAAQG,KAAKD,GAPU,0UASlBF,GATkB,4EAAH,wDAYXI,GAAW,uCAAG,WAAOhF,GAAP,6BAAArB,EAAA,sDACnBsG,EAASzI,EAAS6H,IAAIrE,GACxBwE,EAAO,GAFc,iCAGCS,GAHD,yHAKvBT,GALuB,EAKThB,WALS,oTAOb,KAATgB,EAPsB,0CAQhBA,GARgB,iEAUOxE,EAAIwD,WAVX,kFAAH,sD,wFIxJT0B,OAjCf,SAAsBC,GAAQ,IAAD,EACCC,oBAAS,GADV,mBACpBC,EADoB,KACZC,EADY,KAa3B,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM5D,GAAG,WAAT,SAAqByD,EAAMI,OAAa,GACxC,cAAC,KAAD,CACEC,WAAY,IACZC,OAAQJ,EACRK,MAAM,UAHR,SAKA,cAAC,KAAD,CACEC,YAAY,QACZC,aAAW,WACXC,KAAM,cAACC,GAAA,EAAD,IACNC,QAAS,kBAtBf,WACE,IAAIC,EAAWC,SAASC,cAAc,aAClCC,EAAQF,SAASG,cACrBD,EAAME,WAAWL,GACjBtD,OAAO4D,eAAeC,SAASJ,GAE/BF,SAASO,YAAY,QACrBlB,GAAU,GAeOmB,Y,yECRfC,GAAY,CAChBC,EAAG,CACDC,IAAK,gEACLC,SAAU,wBACVC,QAAS,EACT9D,KAbC,eAeH+D,EAAG,CACDH,IAAK,gEACLC,SAAU,gCACVC,QAAS,EACT9D,KAjBC,mBAmBHgE,EAAG,CACDJ,IAAK,gEACLC,SAAU,gCACVC,QAAS,EACT9D,KAtBC,mBAwBHiE,EAAG,CACDL,IAAK,8DACLC,SAAU,8BACVC,QAAS,EACT9D,KA3BC,qBA6BHkE,GAAI,CACFN,IAAK,+DACLC,SAAU,+BACVC,QAAS,GACT9D,KApCE,kBAyCAmE,GAAY,SAACL,GAAD,OAAqBJ,GAAUI,GAAW,GAAGF,KAGzDQ,GAAczK,wBAAc,CAChC6C,QAAS,KACT8D,SAAU,KACV+D,gBAAiB,KACjBC,SAAS,EACTC,YAAa,eAGFC,GAAiB,kBAAMpK,qBAAWgK,KAEzCK,GAAoC,CACxCC,cAAe,CACbC,QAASC,KACT3H,QAAS,CACP2G,IAAK,CACHD,EAAGQ,GAAU,GACbJ,EAAGI,GAAU,GACbH,EAAGG,GAAU,GACbF,EAAGE,GAAU,GACbD,GAAIC,GAAU,QAMhBU,GACc,qBAAXnF,QACP,IAAIoF,KAAU,CACZC,eAAe,EACfN,qBAoEWO,GAjEuB,SAAC,GAAkB,IAAhBjL,EAAe,EAAfA,SAAe,EAEpDqI,mBAAS,CACP5F,QAAS,KACT8D,SAAU,KACV+D,gBAAiB,OALiC,0BAC7C7H,EAD6C,EAC7CA,QAAS6H,EADoC,EACpCA,gBAAiB/D,EADmB,EACnBA,SAAY2E,EADO,OAQxB7C,oBAAS,GARe,mBAQ/CkC,EAR+C,KAQtCY,EARsC,KAUhDC,EAAcC,sBAAW,uCAC7B,WACEC,EACAC,GAFF,mBAAA3J,EAAA,kEAKIuJ,GAAW,IACPG,EANR,oBAOY/E,EAAW,IAAIiF,KAAOC,UAAUC,aACpC,IAAIC,KAAKL,GAAMM,iBAEX7B,EAAU8B,SAASP,EAAKvB,QAAS,KACvBwB,EAXtB,iCAYgBhF,EAASuF,YAAYC,aAZrC,gDAaU,KAbV,QAWYtJ,EAXZ,KAeMyI,GAAa,SAAAc,GAAQ,kCAChBA,GADgB,IAEnB1B,gBAAiBP,EACjBxD,WACA9D,QAASA,GAAWuJ,EAASvJ,aAnBrC,0DAuBIN,QAAQ8J,MAAM,KAAIC,SAvBtB,yBAyBIf,GAAW,GAzBf,6EAD6B,wDA6B7B,IAGIX,EAAca,sBAAW,sBAAC,4BAAAzJ,EAAA,sEACFkJ,GAAUqB,UADR,cACxBC,EADwB,gBAExBhB,EAAYgB,GAAe,GAFH,OAG9BA,EAAchH,GAAG,gBAAgB,kBAAMgG,EAAYgB,MACnDA,EAAchH,GAAG,kBAAjB,uCAAoC,WAAOiH,GAAP,SAAAzK,EAAA,+EAClCsJ,GAAa,SAAAoB,GAAI,kCAAUA,GAAV,IAAgB7J,QAAS4J,EAAO,SADf,2CAApC,uDAJ8B,2CAO7B,CAACjB,IAOJ,OALAmB,qBAAU,WACJ5G,OAAO6G,WAAU7G,OAAO6G,SAASC,4BAA6B,GAClE3B,GAAU4B,eAAiBlC,IAAgBW,GAAW,KACrD,CAACX,IAGF,cAACH,GAAYpK,SAAb,CACEC,MAAO,CAAEuC,UAAS6H,kBAAiB/D,WAAUgE,UAASC,eADxD,SAGGxK,KCuBQ2M,GAjKC,WAAO,IAAD,EACSvM,IADT,mBACbwM,EADa,KACHC,EADG,OAEoBxE,oBAAS,GAF7B,mBAEbyE,EAFa,KAECC,EAFD,OAGiBtC,KAA7BH,EAHY,EAGZA,gBAAiB7H,EAHL,EAGKA,QAEnBuK,EAAO,uCAAG,WAAOzL,EAASwE,GAAhB,iBAAAnE,EAAA,sEACGoD,EAAMzD,GADT,YACR2D,EADQ,4BAII,aAAZA,EAAGa,MAAmC,SAAZb,EAAGa,KAJrB,iCAMRb,EAAGL,SAAS,CAAEC,MAAO,IACpBC,UACAkI,UARO,OAKVC,EALU,+BAWVA,EADqB,YAAZhI,EAAGa,KACF,CAAC,CAAEvD,QAAS,CAAEtC,MAAOgF,EAAGhF,SACb,aAAZgF,EAAGa,KACFoH,OAAOC,KAAKlI,EAAGmI,KAAK/H,KAAI,SAACC,GAAD,MAAQ,CACxC/C,QAAS,CAAEtC,MAAO,CAACoN,IAAK/H,EAAGrF,MAAOgF,EAAGiC,IAAI5B,SAEtB,aAAZL,EAAGa,KACFb,EAAGqI,OAAM,SAAChI,GAAD,MACL,CAAEiI,QAAQ,GAAQP,aAGtB,CAAC,CAAEzK,QAAS,CAAEtC,MAAO,UArBrB,aAuBJ6F,EAvBI,OAwBL,mBAxBK,QA2BL,YA3BK,QA8BL,YA9BK,QAiCL,eAjCK,gCAyBR8G,EAAS,CAAE9G,KAAMzF,EAAgBG,YAAayE,KAAIgI,YAzB1C,oCA4BRL,EAAS,CAAE9G,KAAMzF,EAAkBI,cAAewE,KAAIgI,YA5B9C,oCA+BRL,EAAS,CAAE9G,KAAMzF,EAAgBK,YAAauE,KAAIgI,YA/B1C,oCAkCRL,EAAS,CAAE9G,KAAMzF,EAAWE,OAAQ0E,KAAIgI,YAlChC,oCAqCR/K,QAAQiB,KAAR,4BAAkC2C,EAAlC,MArCQ,qDAyCZ5D,QAAQC,IAAIb,EAAS,qBAzCT,4CAAH,wDALO,SA4DLkM,IA5DK,2EA4DpB,sBAAA7L,EAAA,sEACQoL,EAAQ,wEAAyE,cADzF,uBAEQA,EAAQ,qEAAsE,WAFtF,uBAGQA,EAAQ,4EAA6E,kBAH7F,uBAIQA,EAAQ,qEAAsE,WAJtF,4CA5DoB,sBAuEpBU,IAAMnB,WAAU,WACd,sBAAC,sBAAA3K,EAAA,sEAEGqC,IAAW0J,KAAX,uCAAgB,WAAOtM,GAAP,SAAAO,EAAA,6DACdiL,EAAS,CAAE9G,KAAMzF,EAAgBM,SAAUgN,WAAY,YADzC,SAIZvJ,EAAYhD,GAAMsM,KAAlB,uCAAuB,WAAOE,GAAP,iBAAAjM,EAAA,6DACrBiL,EAAS,CAAE9G,KAAMzF,EAAgBO,YAAaiN,cAAe,YAEzDC,EAAYF,EAAU/K,SAAS6B,GACnCkI,EAAS,CAAC9G,KAAMzF,EAAaC,SAAUwN,cAJlB,SAKfN,IALe,uBAMEjJ,IANF,OAMf9E,EANe,OAOrBmN,EAAS,CAAE9G,KAAMzF,EAAiBQ,aAAcpB,SAAUA,EAASuN,YACnEJ,EAAS,CAAE9G,KAAMzF,EAAiBS,qBAAsBwJ,SAAS,IAR5C,4CAAvB,uDAJY,2CAAhB,uDAFH,0CAAD,KAoBC,CAACsC,IAEJ,IAAMmB,EAAgB,SAAC5F,GAAD,OACpB,eAAC,IAAD,CAAQ6F,SAAS,KAAKC,QAAS,EAAGC,WAAW,WAA7C,UACE,cAAC,KAAD,UAAO/F,EAAMnC,OAAa,GACzBmC,EAAMgG,UACL,cAAC,KAAD,IAEA,cAACC,GAAA,EAAD,IAEDjG,EAAMX,MACL,cAAC,KAAD,UACGW,EAAMkG,KACL,cAAC,KAAD,CACE1F,YAAY,QACZE,KAAM,cAACyF,GAAA,EAAD,IACNC,WAAcpG,EAAMgG,UACpBpF,QAAS,kBAAIyE,OAGf,cAAC,KAAD,UACGX,EACC,cAAC,GAAD,CAActE,KAAMJ,EAAMX,OAE1B,eAAC,KAAD,CAAMuB,QAAS,kBAAI+D,GAAiBD,IAApC,UAAoD1E,EAAMX,KAAKgH,MAAM,EAAE,GAAvE,iBASd,OACE,cAAC,KAAD,CAAMC,EAAE,MAAMC,OAAO,sBAArB,SACE,eAAC,IAAD,CAASC,WAAW,OAApB,UACI,cAACZ,EAAD,CACE/H,KAAO,OACPmI,UAAqC,YAAxBxB,EAASgB,aAExB,cAACI,EAAD,CACE/H,KAAO,UACPmI,UAAwC,YAA3BxB,EAASkB,gBAExB,cAACE,EAAD,CACE/H,KAAO,OACPmI,WAAcxB,EAASiC,KACvBpH,KAAQmF,EAASiC,OAEnB,cAACb,EAAD,CACE/H,KAAO,aACPmI,WAAcxB,EAAS1H,GACvBuC,KAAO,UACP6G,MAAQ,IAEV,cAACN,EAAD,CACE/H,KAAO,OACPmI,WAAc3L,EACdgF,KAA4B,MAApB6C,EACN,kBAEA7H,U,4ECICqM,OAlKf,SAAmB1G,GAAQ,IAAD,EACY2G,eAA5BrG,EADgB,EAChBA,OAAQsG,EADQ,EACRA,OAAQC,EADA,EACAA,QADA,EAEI5G,qBAFJ,mBAEjBhD,EAFiB,KAET6J,EAFS,OAGgB7G,qBAHhB,mBAGjB8G,EAHiB,KAGHC,EAHG,iDAKxB,8BAAAxN,EAAA,6DACMqB,EAAMiG,SAASmG,eAAe,WAAWnP,MAD/C,SAEqB+H,GAAYhF,GAFjC,OAEMoC,EAFN,OAGElD,QAAQC,IAAIiD,GACZ6J,EAAU7J,GAJZ,4CALwB,kEAYxB,gCAAAzD,EAAA,6DACMqB,EAAMiG,SAASmG,eAAe,WAAWnP,MAD/C,SAEqBqH,GAAQtE,GAF7B,OAEMoC,EAFN,OAIE,IACEiK,GAAS,IAAIC,aAAcD,OAAOjK,GACnC,SACCiK,EAASjK,EAAOoB,WAElBtE,QAAQC,IAAIkN,GACZJ,EAAUI,GAVZ,4CAZwB,kEA0BxB,8BAAA1N,EAAA,6DACM1B,EAAQgJ,SAASmG,eAAe,WAAWnP,MAAMuG,WADvD,kBAGoBe,GAAevF,KAAKC,MAAMhC,IAH9C,OAGQ+C,EAHR,OAIIiM,EAAUjM,EAAIwD,YACdtE,QAAQC,IAAI,sDALhB,gDAOID,QAAQC,IAAI,iDACZ8M,EAAU,iDARd,0DA1BwB,kEAsCxB,gCAAAtN,EAAA,sDACQ4N,EAAetG,SAASmG,eAAe,aAAaI,MAAM,IAE5DC,EAAS,IAAIC,YACVC,WAAWJ,GAClBE,EAAOG,UAAY,WACf5M,EAAM0E,GAAQ+H,EAAOrK,QACrB6J,EAAUjM,EAAIwD,aAPpB,4CAtCwB,kEAyDxB,8BAAA7E,EAAA,6DACQqB,EAAMiG,SAASmG,eAAe,SAASnP,MAAMuG,WADrD,SAEmBM,GAAM9D,GAFzB,OAEQ6M,EAFR,OAGEZ,EAAUY,EAAGrJ,YAHf,4CAzDwB,sBAqExB,IAAMsJ,EAAO,WAEX,OAAQZ,GACN,IAAK,mBACL,OAAQ,eAAC,IAAD,WACE,cAAC,KAAD,CAAOxK,GAAG,UAAUqL,YAAY,OAAOtB,EAAE,QACzC,cAAC,IAAD,CAAQ1F,QAAS,YA3EP,mCA2EYiH,IAAtB,+BAEV,IAAK,mBACL,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAOtL,GAAG,UAAUqL,YAAY,OAAOtB,EAAE,QACzC,cAAC,IAAD,CAAQ1F,QAAS,YAjFD,mCAiFMkH,IAAtB,8BAGJ,IAAK,YACL,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAOvL,GAAG,UAAUqL,YAAY,aAChC,cAAC,IAAD,CAAQhH,QAAS,YAxFD,mCAwFMmH,IAAtB,+CAGJ,IAAK,eACL,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CACEnH,QAAS,WAAKE,SAASmG,eAAe,aAAae,SACnDtH,KAAM,cAACuH,GAAA,EAAD,IACNC,QAAQ,UACR1H,YAAY,UAEd,cAAC,KAAD,CACE2H,QAAM,EACNxK,KAAK,OACLpB,GAAG,cAEL,cAAC,IAAD,CAAQqE,QAAS,YAzGD,mCAyGMwH,IAAtB,+BAIJ,IAAK,WACL,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAO7L,GAAG,QAAQqL,YAAY,OAAOtB,EAAE,QACvC,cAAC,IAAD,CAAQ1F,QAAS,YAjHD,mCAiHMyH,IAAtB,+BAGJ,QACA,OAAO,OAIX,OACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAQH,QAAQ,UAAU1H,YAAY,QAAQI,QAASgG,EAAvD,0BAEA,eAAC,KAAD,CACE0B,KAAK,KACLC,UAAU,QAAQ1B,QAASA,EAASvG,OAAQA,EAF9C,UAGE,cAAC,KAAD,IACA,eAAC,KAAD,CAAekI,GAAG,OAAlB,UACE,cAAC,KAAD,CAAcC,kBAAkB,MAAMC,MAAM,YAA5C,wBACA,eAAC,KAAD,WAGA,eAAC,IAAD,CACAR,QAAQ,UACRpC,QAAQ,IAFR,UAIA,cAAC,IAAD,CAAQlF,QAAS,kBAAIoG,EAAgB,cAArC,wBACA,cAAC,IAAD,CAAQpG,QAAS,kBAAIoG,EAAgB,qBAArC,sBACA,cAAC,IAAD,CAAQpG,QAAS,kBAAIoG,EAAgB,qBAArC,sBACA,cAAC,IAAD,CAAQpG,QAAS,kBAAIoG,EAAgB,iBAArC,8BACA,cAAC,IAAD,CAAQpG,QAAS,kBAAIoG,EAAgB,aAArC,wBAEA,uBACA,cAAC,KAAD,IACA,uBACA,cAACW,EAAD,IACA,uBACA,cAAC,KAAD,IACA,uBACC1K,EACC,cAAC,GAAD,CAAcmD,KAAMnD,IACnB,kBCzGE0L,OAhDf,WAEE,IAAMC,EAAUC,cAFC,EAGE7Q,IAAZwM,EAHU,oBAgBjB,OACE,eAAC,IAAD,WACI,cAAC,GAAD,IACA,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAQ0D,QAAQ,UAAU1H,YAAY,QAAQI,QAXtD,WACEgI,EAAQhJ,KAAK,MAUP,6BAEA,cAAC,IAAD,UACA,cAAC,IAAD,CACEY,YAAY,QACZ0H,QAAQ,UACRtH,QAvBV,WACEgI,EAAQhJ,KAAK,oBAuBLwG,YAAa5B,EAASM,QAAQgE,OAAQ,EAJxC,gCAOA,cAAC,IAAD,UACA,cAAC,IAAD,CACEZ,QAAQ,UACR1H,YAAY,QACZI,QA5BV,WACEgI,EAAQhJ,KAAK,oBA4BLwG,YAAa5B,EAASuE,eAAeD,OAAQ,EAJ/C,+BAOA,cAAC,IAAD,UACE,cAAC,GAAD,aChDG,OAA0B,0CCInCE,GAAKnQ,EAAQ,KAuMJoQ,OArMf,SAAejJ,GAEb,IAWIX,EAXE6J,EAAQ,IACRC,EAASD,EAAQ,EACjBE,EAASJ,GAAGI,OAAO,MACnBC,EAAML,GAAGK,MACdC,YAAW,SAAAC,GAAC,OAAIA,EAAEC,MAClBC,UAAS,SAAAF,GAAC,OAAIA,EAAEG,MAChBC,UAAS,SAAAJ,GAAC,OAAIK,KAAKC,KAAKN,EAAEG,GAAKH,EAAEC,IAAM,EAAG,SAC1CM,UAAUX,KACVY,aAAY,SAAAR,GAAC,OAAIA,EAAES,GAAKb,KACxBc,aAAY,SAAAV,GAAC,OAAIK,KAAKM,IAAIX,EAAES,GAAKb,EAAQI,EAAEY,GAAKhB,EAAS,MAIpDiB,GAAgBpK,EAAMqK,aAAqD,IAAtCrK,EAAMqK,YAAYzS,SAASkR,OAEpEzJ,EADC+K,EACMpK,EAAMX,KAENW,EAAMqK,YAGf,IAAM3B,EAAQM,GAAGsB,aAAatB,GAAGuB,SAASvB,GAAGwB,mBAAoBnL,EAAKzH,SAASkR,OAAS,IAUpF2B,EAAQ,WAAO,IAAD,EACVC,EAVU,SAAArL,GAChB,IAAMqL,EAAO1B,GAAG2B,UAAUtL,GACrBuL,KAAI,SAAArB,GAAC,OAAIA,EAAEzR,SACX+S,MAAK,SAACrR,EAAGsR,GAAJ,OAAUA,EAAEhT,MAAQ0B,EAAE1B,SAChC,OAAOkR,GAAG+B,YACLzC,KAAK,CAAC,EAAIsB,KAAKoB,GAAIN,EAAKO,OAAS,GAD/BjC,CAEJ0B,GAIUK,CAAU1L,GAEvBqL,EAAKQ,MAAK,SAAA3B,GAAC,OAAIA,EAAE4B,QAAU5B,KAE3B,IAAM6B,EAAMpC,GACPqC,OAAO,UACPC,OAAO,OACPC,KAAK,UAAW,CAAC,EAAG,EAAGrC,EAAOA,IAC9BsC,MAAM,OAAQ,mBAEnBzG,OAAOD,QAAP,UAAe9E,EAAMwL,aAArB,QAA8B,IAAIC,SAAQ,YAAkB,IAAD,mBAAfF,EAAe,KAATG,EAAS,KACzDN,EAAII,MAAMD,EAAMG,MAGlB,IAAMC,EAAIP,EAAIE,OAAO,KAChBC,KAAK,YADA,oBAC0BrC,IAD1B,YACuCA,IADvC,MAGJ0C,EAAM5C,GAAGqC,OAAO,QAAQC,OAAO,OAChCC,KAAK,QAAS,WACdC,MAAM,QAAS,SAEd3M,EACJ8M,EAAEL,OAAO,KACRO,UAAU,QACVxM,KAAKqL,EAAKoB,cAAczF,MAAM,IAC9B0F,KAAK,QACLR,KAAK,QAAQ,SAAAhC,GAAO,KAAOA,EAAEyC,MAAQ,GAAGzC,EAAIA,EAAE0C,OAAQ,OAAOvD,EAAMa,EAAElK,KAAKxB,SAC1E0N,KAAK,gBAAgB,SAAAhC,GAAC,OAAI2C,EAAW3C,EAAE4B,SAAY5B,EAAE3R,SAAW,GAAM,GAAO,KAC7E2T,KAAK,KAAK,SAAAhC,GAAC,OAAIF,EAAIE,EAAE4B,YACrBnO,GAAG,aAAa,SAACmP,EAAK5C,GACrBqC,EAAIQ,aACHC,SAAS,KACTb,MAAM,UAAW,OAKnBxO,GAAG,YAAY,SAASuM,GACvBqC,EAAIQ,aACHC,SAAS,KACTb,MAAM,UAAW,MAItB3M,EAAK2M,MAAM,UAAU,SAAAjC,GAAC,OACpB+C,QAAQ/C,EAAE3R,UAAY,YAAc,aAErCoF,GAAG,QAASuP,GAEb1N,EAAKyM,OAAO,SACPlL,MAAK,SAAAmJ,GAAC,gBAAOA,EAAEiD,YAAYtP,KAAI,SAAAqM,GAAC,OAAIA,EAAElK,KAAKxB,QAAMgH,UAAUkH,KAAK,KAA1D,aAAmE3C,EAAOG,EAAEzR,WAEvF,IAAMyI,EACJoL,EAAEL,OAAO,KACNC,KAAK,iBAAkB,OACvBA,KAAK,cAAe,UACpBC,MAAM,cAAe,QACvBK,UAAU,QACVxM,KAAKqL,EAAKoB,cAAczF,MAAM,IAC9B0F,KAAK,QACHR,KAAK,KAAM,UACXA,KAAK,gBAAgB,SAAAhC,GAAC,OAAKkD,EAAalD,EAAE4B,YAC1CI,KAAK,aAAa,SAAAhC,GAAC,OAAImD,EAAenD,EAAE4B,YACxCK,MAAM,OAAQ,SACdpL,MAAK,SAAAmJ,GAAC,OAAIA,EAAElK,KAAKxB,QACjB2N,MAAM,UAAU,SAAAjC,GAAC,OAChB+C,QAAQ/C,EAAE3R,UAAY,YAAc,aAErCoF,GAAG,QAASuP,GACZvP,GAAG,aAAa,SAACmP,GAChBnD,GAAGqC,OAAOc,EAAIQ,QACbP,aACAC,SAAS,KACTb,MAAM,YAAa,WAErBxO,GAAG,YAAY,SAACmP,GACfnD,GAAGqC,OAAOc,EAAIQ,QACbP,aACAC,SAAS,KACTb,MAAM,YAAa,WAIpBS,EAASN,EAAEL,OAAO,SACnBC,KAAK,iBAAkB,OACvBvO,GAAG,QAASuP,GACVhB,KAAK,aAAaqB,IAClBrB,KAAK,QAAS,KACdA,KAAK,SAAU,KACfA,KAAK,KAAK,IACVA,KAAK,KAAK,IAEjB,SAASgB,EAAQM,EAAOC,GAAI,IACVxP,EAAUwP,EAAlBzN,KAAQ/B,IAChB,GAAGA,EACD,OAAOC,OAAOV,KAAKS,EAAK,UAAUE,QAEpC,GAAIsP,EAAJ,CACAb,EAAOc,MAAMD,EAAEb,QAAUvB,GACzBA,EAAKQ,MAAK,SAAA3B,GAAC,OAAIA,EAAEoD,OAAS,CACxBnD,GAA8D,EAA1DI,KAAKM,IAAI,EAAGN,KAAKC,IAAI,GAAIN,EAAEC,GAAKsD,EAAEtD,KAAOsD,EAAEpD,GAAKoD,EAAEtD,MAAYI,KAAKoB,GACvEtB,GAA8D,EAA1DE,KAAKM,IAAI,EAAGN,KAAKC,IAAI,GAAIN,EAAEG,GAAKoD,EAAEtD,KAAOsD,EAAEpD,GAAKoD,EAAEtD,MAAYI,KAAKoB,GACvEhB,GAAIJ,KAAKM,IAAI,EAAGX,EAAES,GAAK8C,EAAEd,OACzB7B,GAAIP,KAAKM,IAAI,EAAGX,EAAEY,GAAK2C,EAAEd,WAG3B,IAAMgB,EAAIrB,EAAES,aAAaC,SAAS,KAElCxN,EAAKuN,WAAWY,GACXC,MAAM,QAAQ,SAAA1D,GACb,IAAM2D,EAAIlE,GAAGmE,YAAY5D,EAAE4B,QAAS5B,EAAEoD,QACtC,OAAO,SAAAK,GAAC,OAAIzD,EAAE4B,QAAU+B,EAAEF,OAE7BI,QAAO,SAAS7D,GACf,OAAQhQ,KAAK8T,aAAa,iBAAmBnB,EAAW3C,EAAEoD,WAEzDpB,KAAK,gBAAgB,SAAAhC,GAAC,OAAI2C,EAAW3C,EAAEoD,QAAWpD,EAAE3R,SAAW,GAAM,GAAO,KAC5E0V,UAAU,KAAK,SAAA/D,GAAC,OAAI,kBAAMF,EAAIE,EAAE4B,aAErC5K,EAAM6M,QAAO,SAAS7D,GAClB,OAAQhQ,KAAK8T,aAAa,iBAAmBZ,EAAalD,EAAEoD,WAC3DP,WAAWY,GACXzB,KAAK,gBAAgB,SAAAhC,GAAC,OAAKkD,EAAalD,EAAEoD,WAC1CW,UAAU,aAAa,SAAA/D,GAAC,OAAI,kBAAMmD,EAAenD,EAAE4B,cAG1D,SAASe,EAAW3C,GAClB,OAAOA,EAAEY,IAAM,GAAKZ,EAAES,IAAM,GAAKT,EAAEG,GAAKH,EAAEC,GAG5C,SAASiD,EAAalD,GACpB,OAAOA,EAAEY,IAAM,GAAKZ,EAAES,IAAM,IAAMT,EAAEY,GAAKZ,EAAES,KAAOT,EAAEG,GAAKH,EAAEC,IAAM,IAGnE,SAASkD,EAAenD,GACtB,IAAMgE,GAAKhE,EAAEC,GAAKD,EAAEG,IAAM,EAAI,IAAME,KAAKoB,GACnCwC,GAAKjE,EAAES,GAAKT,EAAEY,IAAM,EAAIhB,EAC9B,MAAM,UAAN,OAAiBoE,EAAI,GAArB,uBAAsCC,EAAtC,sBAAqDD,EAAI,IAAM,EAAI,IAAnE,KAEA,OAAOnC,EAAIqC,QAQf,OALAtJ,qBAAU,WACR6E,GAAGqC,OAAO,UAAUA,OAAO,OAAO7M,SAClCiM,MACA,CAACzK,EAAMqK,YAAarK,EAAMX,OAG1B,8BAEI,qBACE9C,GAAG,QACHiP,MAAO,CACLkC,QAAS,OACTC,eAAgB,SAChBnH,WAAY,SACZoH,OAAQ,iBChMd5E,GAAKnQ,EAAQ,KAiMJgV,OA/Lf,SAAyB7N,GAEvB,IACIX,EACE+K,GAAgBpK,EAAMqK,aAAqD,IAAtCrK,EAAMqK,YAAYzS,SAASkR,OAEpEzJ,EADC+K,EACMpK,EAAMX,KAENW,EAAMqK,YAIf,IAAMI,EAAQ,WAAO,IAAD,EAEZqD,EAZM,IAYK,EACXF,EAAgB,GAAhBA,EAAuC,GAAvCA,EAAiD,GACjDG,EAAW/E,GAAGgF,iBAAiBT,GAAE,SAAAhE,GAAC,OAAIA,EAAEiE,KAAGA,GAAE,SAAAjE,GAAC,OAAIA,EAAEgE,KACpD7N,EAAOsJ,GAAGtJ,OAAOuO,SAAS,CAJrB,GAI0BH,IAC/BpD,EAAO1B,GAAG2B,UAAUtL,GAE1BqL,EAAKlB,GAAKsE,EAAK,EACfpD,EAAKV,GAAK,EACVU,EAAKoB,cAAcL,SAAQ,SAAClC,EAAG2D,GAC7B3D,EAAEhN,GAAK2Q,EACP3D,EAAE2E,UAAY3E,EAAE3R,SACZ2R,EAAEyC,OAAgC,IAAvBzC,EAAElK,KAAKxB,KAAKiL,SAAiB9I,EAAMqK,cAAad,EAAE3R,SAAW,SAG9E,IAAMwT,EAAMpC,GAAGqC,OAAO,UACjBC,OAAO,OACPC,KAAK,UAAW,EAAEqC,GAAcA,EA5BzB,IAWD,KAkBNpC,MAAM,OAAQ,mBACdA,MAAM,cAAe,QAE1BzG,OAAOD,QAAP,UAAe9E,EAAMwL,aAArB,QAA8B,IAAIC,SAAQ,YAAkB,IAAD,mBAAfF,EAAe,KAATG,EAAS,KACzDN,EAAII,MAAMD,EAAMG,MAGlB,IAAMyC,EAAQ/C,EAAIE,OAAO,KACpBC,KAAK,OAAQ,QACbA,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBA,KAAK,eAAgB,KAEpB6C,EAAQhD,EAAIE,OAAO,KACpBC,KAAK,SAAU,WACfA,KAAK,iBAAkB,OAuH5B,OApHA,SAAS8C,EAAOC,GACd,IAAMjC,EAAWrD,GAAG6D,OAAS7D,GAAG6D,MAAM0B,OAAS,KAAO,IAChDC,EAAQ9D,EAAKoB,cAAcjH,UAC3B4J,EAAQ/D,EAAK+D,QAGnB/O,EAAKgL,GAEL,IAAIgE,EAAOhE,EACPiE,EAAQjE,EACZA,EAAKkE,YAAW,SAAAnB,GACVA,EAAKF,EAAImB,EAAKnB,IAAGmB,EAAOjB,GACxBA,EAAKF,EAAIoB,EAAMpB,IAAGoB,EAAQlB,MAGhC,IAAMxC,EAAS0D,EAAMpB,EAAImB,EAAKnB,EAAIK,EAAaA,EAEzCxB,EAAahB,EAAIgB,aAClBC,SAASA,GACTd,KAAK,UAAW,EAAEqC,EAAac,EAAKnB,EAAIK,EAlEnC,IAkEsD3C,IAC3DgC,MAAM,SAAU1P,OAAOsR,eAAiB,KAAO,kBAAM,kBAAMzD,EAAI3G,SAAS,aAGvEgJ,EAAOW,EAAMvC,UAAU,KAC1BxM,KAAKmP,GAAO,SAAAjF,GAAC,OAAIA,EAAEhN,MAWhBuS,EAAYrB,EAAKsB,QAAQzD,OAAO,KACjCC,KAAK,aAAa,SAAAhC,GAAC,0BAAiB+E,EAAOtE,GAAxB,YAA8BsE,EAAO9E,GAArC,QACnB+B,KAAK,eAAgB,GACrBA,KAAK,iBAAkB,GACvBvO,GAAG,SAAS,SAAC6P,EAAOtD,GAZzB,IAAcjM,EAaLiM,EAAE2E,WACH3E,EAAE3R,SAAW2R,EAAE3R,SAAW,KAAO2R,EAAE2E,UACnCG,EAAO9E,KAfDjM,EAiBDiM,EAAElK,KAAK/B,IAhBlBvD,QAAQC,IAAIsD,GAETA,GAAKC,OAAOV,KAAKS,EAAK,UAAUE,YAkBrCsR,EAAUxD,OAAO,UACZC,KAAK,IAAK,KACVA,KAAK,QAAQ,SAAAhC,GAAC,OAAIA,EAAE2E,UAAY,UAAY,UAC5C3C,KAAK,eAAgB,IAE1BuD,EAAUxD,OAAO,QACZC,KAAK,KAAM,UACXA,KAAK,KAAK,SAAAhC,GAAC,OAAIA,EAAE2E,WAAa,EAAI,KAClC3C,KAAK,eAAe,SAAAhC,GAAC,OAAIA,EAAE2E,UAAY,MAAQ,WAC/C9N,MAAK,SAAAmJ,GAAC,OAAIA,EAAElK,KAAKxB,QACjBb,GAAG,aAAa,SAAUuM,GAEzBP,GAAGqC,OAAO9B,EAAEoD,QAAQnB,MAAM,OAAQ,WAEnCxO,GAAG,YAAY,SAAUuM,GACrBA,EAAEoD,OAAOuB,UACVlF,GAAGqC,OAAO9B,EAAEoD,QAAQnB,MAAM,OAAQ,WAElCxC,GAAGqC,OAAO9B,EAAEoD,QAAQnB,MAAM,OAAQ,YAGvCwD,OAAM,GAAMC,QACV1D,KAAK,kBAAmB,SACxBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,SAGpBkC,EAAKyB,MAAMJ,GAAW1C,WAAWA,GAC5Bb,KAAK,aAAa,SAAAhC,GAAC,0BAAiBA,EAAEiE,EAAnB,YAAwBjE,EAAEgE,EAA1B,QACnBhC,KAAK,eAAgB,GACrBA,KAAK,iBAAkB,GAG5BkC,EAAK0B,OAAO/C,WAAWA,GAAY5N,SAC9B+M,KAAK,aAAa,SAAAhC,GAAC,0BAAiB+E,EAAOd,EAAxB,YAA6Bc,EAAOf,EAApC,QACnBhC,KAAK,eAAgB,GACrBA,KAAK,iBAAkB,GAG5B,IAAM6D,EAAOjB,EAAMtC,UAAU,QAC1BxM,KAAKoP,GAAO,SAAAlF,GAAC,OAAIA,EAAEoD,OAAOpQ,MAGvB8S,EAAYD,EAAKL,QAAQzD,OAAO,QACjCC,KAAK,KAAK,SAAAhC,GACT,IAAM+F,EAAI,CAAC/B,EAAGe,EAAO9E,GAAIgE,EAAGc,EAAOtE,IACnC,OAAO+D,EAAS,CAACO,OAAQgB,EAAG3C,OAAQ2C,OAI1CF,EAAKF,MAAMG,GAAWjD,WAAWA,GAC5Bb,KAAK,IAAKwC,GAGfqB,EAAKD,OAAO/C,WAAWA,GAAY5N,SAC9B+M,KAAK,KAAK,SAAAhC,GACT,IAAM+F,EAAI,CAAC/B,EAAGe,EAAOf,EAAGC,EAAGc,EAAOd,GAClC,OAAOO,EAAS,CAACO,OAAQgB,EAAG3C,OAAQ2C,OAI1C5E,EAAKkE,YAAW,SAAArF,GACdA,EAAEC,GAAKD,EAAEgE,EACThE,EAAES,GAAKT,EAAEiE,KAIba,CAAO3D,GACAU,EAAIqC,QAQb,OALAtJ,qBAAU,WACR6E,GAAG6C,UAAU,UAAUR,OAAO,OAAO7M,SACrCiM,MACA,CAACzK,EAAMqK,YAAarK,EAAMX,OAG1B,gCACE,uBAEA,qBACE9C,GAAG,QACHiP,MAAO,CACLkC,QAAS,OACTC,eAAgB,SAChBnH,WAAY,SACZoH,OAAQ,kB,4CCpLZ2B,GAAgB1W,EAAQ,MA6Lf2W,OA5Lf,SAAiBxP,GAAQ,IAAD,EACHhI,IAAZwM,EADe,sBAGEvE,mBAASsP,IAHX,mBAGflQ,EAHe,KAGToQ,EAHS,OAIMxP,qBAJN,mBAIfyP,EAJe,KAIPC,EAJO,OAKQ1P,mBAAS,IALjB,mBAKfR,EALe,KAKNmQ,EALM,OAMgB3P,qBANhB,mBAMfoK,EANe,KAMFwF,EANE,OAOD5P,mBAAS,YAPR,mBAOf6P,EAPe,KAOXC,EAPW,KAShBC,EAAO,uCAAG,WAAOnV,GAAP,SAAArB,EAAA,+EAAuByF,GAAapE,IAApC,2CAAH,sDATS,4CAWtB,WAA2B8C,GAA3B,6BAAAnE,EAAA,2DAKUmE,EALV,OAMS,YANT,OA2CS,eA3CT,+BAOU/F,EAAW,GACfkN,EAAUN,EAASuE,eAAe,GARxC,SAWkB9J,GAAa6F,EAAQ1K,QAAQtC,MAAMA,OAXrD,cAWM+C,EAXN,OAYMd,QAAQC,IAAI,MAAMa,GAZxB,UAcqBoE,GAAapE,EAAI/C,OAdtC,QAcMmY,EAdN,OAgBYC,EAAYrW,KAAKC,MAAMmW,EAAOnY,OACpCiC,QAAQC,IAAI,SAASkW,GAjB3B,OAAA1W,EAAA,KAsBwB0W,GAtBxB,kDAuBsB,UADRC,EAtBd,8CA2B0BlR,GAAaiR,EAAUC,IA3BjD,SA2BcC,EA3Bd,QA+BYxY,EAASgI,KAAKwQ,GAIdrW,QAAQC,IAAIoW,GAnCxB,uCAyCMnT,EAAS,CAACY,KAAKoS,EAAOpS,KAAKjG,SAASA,GAzC1C,oCA4CMkN,EAAUN,EAASM,QAAQ,GA5CjC,UA6CkBkL,EAAQlL,EAAQ1K,QAAQtC,MAAMA,OA7ChD,eA6CM+C,EA7CN,iBA8CqBmV,EAAQnV,EAAI/C,OA9CjC,eA8CMmY,EA9CN,OAgDMhT,EAASgT,EAhDf,sEAuDER,EAAQxS,GAvDV,kBAwDSA,GAxDT,6CAXsB,sBA6FtB,SAASoT,EAAYC,EAAIC,GACvB,IAAIC,EAAU,GACd,OAAKC,MAAMC,QAAQJ,GACN,KAATC,EAAoBD,GAf1B,SAAqBA,EAAKC,EAAMC,GAC9BF,EAAI7E,SAAQ,SAASyB,GACjB,GAAIA,EAAErP,KAAK8S,cAAcC,SAASL,EAAKI,eACnCH,EAAQ5Q,KAAKsN,OACV,CACH,IAAI2D,EAAeR,EAAYnD,EAAEtV,SAAU2Y,GACvCM,EAAa/H,QACb0H,EAAQ5Q,KAAKmF,OAAO+L,OAAO,GAAI5D,EAAG,CAAEtV,SAAUiZ,SAS1DE,CAAYT,EAAKC,EAAMC,GACvBZ,EAAWY,GACRA,IAAY/Q,GACboQ,EAAemB,EAAWR,IAErBA,GAPyBA,EAelCrM,qBAAU,WACQ,KAAXuL,QAA4BuB,IAAXvB,GAAwBA,EAAO5G,OAAS,EAC1DuH,EAAYhR,EAAKzH,SAAU8X,IAN/BG,EAAe,IACfD,EAAW,OASX,CAACF,IAWH,IAAMsB,EAAa,SAACE,GAAS,MAAO,CAACrT,KAAK,WAAYjG,SAASsZ,IAEzDC,EAAiB,SAACxT,GACV,UAATA,EACD8R,EAAQF,IAnIU,oCAqIlB6B,CAAYzT,IAIhB,OACI,sBACEpB,GAAG,UACHiP,MAAO,CACLmC,eAAgB,OAChBnH,WAAY,QAJhB,UASA,eAAC,IAAD,WACE,eAAC,KAAD,CAAQF,EAAE,MAAMsB,YAAY,oBAAoByJ,SAAU,SAAClU,GAAD,OAAKgU,EAAehU,EAAEwP,OAAO7U,QAAvF,UACE,wBAAQA,MAAM,QAAd,+BACA,wBAAQwZ,UAAW9M,EAASM,QAAQgE,OAAQ,EAAGhR,MAAM,aAArD,yBACA,wBAAQwZ,UAAW9M,EAASuE,eAAeD,OAAQ,EAAGhR,MAAM,UAA5D,yBAGF,eAAC,KAAD,CAAQwO,EAAE,MAAMsB,YAAY,aAAayJ,SAAU,SAAClU,GAAD,OAAK4S,EAAO5S,EAAEwP,OAAO7U,QAAxE,UACE,wBAAQA,MAAM,WAAWyZ,SAAO,EAAhC,mBACA,wBAAQzZ,MAAM,kBAAd,qBAGJ,eAAC,KAAD,WACI,cAAC,KAAD,CACE0Z,cAAc,OACd5Z,SAAU,cAAC6Z,GAAA,EAAD,CAAa/I,MAAM,eAE/B,cAAC,KAAD,CAAO/K,KAAK,MAAMiK,YAAY,SAC5ByJ,SAAU,SAAClU,GAAD,OAAKwS,EAAUxS,EAAEwP,OAAO7U,gBAK/B,aAARgY,EACC,cAAC,GAAD,CACAzQ,KAAQA,EACRgL,YAAeA,IAEhB,KACQ,oBAARyF,EACC,cAAC,GAAD,CACAzQ,KAAQA,EACRgL,YAAeA,IAEhB,S,yCCvLDqH,GACJ,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,WAAe5R,EAA1B,+CACE,eAAC,KAAD,2BAAWA,GAAX,cACE,cAAC,KAAD,CAAcuI,UAAU,MAAxB,kBACA,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,kBACA,cAAC,KAAD,oBACA,cAAC,KAAD,6BAGJ,cAAC,KAAD,UACGoJ,EAAOzU,KAAI,WAAiB2U,GAAjB,IAAG3M,EAAH,EAAGA,IAAKpN,EAAR,EAAQA,MAAR,OACV,eAAC,KAAD,WACE,cAAC,KAAD,UAAKoN,IACL,cAAC,KAAD,UAAKpN,IACL,cAAC,KAAD,UACE,cAAC,KAAD,CACE0I,YAAY,QACZE,KAAM,cAACoR,GAAA,EAAD,IACNlR,QAAS,kBAAMgR,EAAW1M,UAPvB2M,aA8GJE,GA7FO,SAAC/R,GAAW,IAAD,EACHC,mBAAS,IADN,mBACxB0R,EADwB,KAChBK,EADgB,cAkChBC,IAlCgB,2EAkC/B,4BAAAzY,EAAA,6DACQyD,EAAS8H,OAAOmN,YAAYP,EAAOzU,KAAI,SAAAiV,GAAC,MAAI,CAACA,EAAC,IAASA,EAAC,WAC9DpY,QAAQC,IAAIH,KAAKe,UAAUqC,IAF7B,SAGQ+C,EAAMoS,YAAYnV,EAAM,KAASpD,KAAKe,UAAUqC,IAHxD,4CAlC+B,sBAwC/B,OACE,eAAC,KAAD,WACE,oBAAIoV,UAAU,UACd,cAAC,KAAD,UACE,cAAC,KAAD,UACGV,EAAO7I,OAAS,EACf,eAAC,KAAD,WACE,cAAC,GAAD,CAAmB6I,SAAQC,WA5CpB,SAACzU,GAClB,IAAImV,EAAa,aAAOX,GAClBY,EAAQZ,EAAOlY,QACnBkY,EAAOa,MAAK,SAACjF,GAAD,OAAOA,EAAErI,MAAQ/H,MAE3BoV,GAAS,IACXD,EAAcG,OAAOF,EAAO,GAC5BP,EAAUM,GACVvY,QAAQC,IAAI,UAAWmD,OAqCf,eAAC,IAAD,WACE,cAAC,KAAD,CACEmJ,EAAE,MAAM9F,YAAY,QAAQ0H,QAAQ,UACpC3L,GAAG,MAAMqL,YAAY,kBAEvB,cAAC,KAAD,CACEtB,EAAE,MAAM9F,YAAY,QAAQ0H,QAAQ,UACpC3L,GAAG,QAAQqL,YAAY,UAEzB,cAAC,IAAD,CACEpH,YAAY,QAAQ0H,QAAQ,UAC5BtH,QApChB,WAAoB,IAGZwP,EAAM,CAAElL,IAFOpE,SAASmG,eAAe,OAAvCnP,MAEaA,MADHgJ,SAASmG,eAAe,SAAlCnP,OAENka,GAAU,SAACL,GAAD,6BACJA,GADI,CACIvB,OAEdtP,SAASmG,eAAe,OAAOnP,MAAQ,GACvCgJ,SAASmG,eAAe,SAASnP,MAAQ,IA0B7B,0BAMA,cAAC,KAAD,IACA,cAAC,IAAD,CACE0I,YAAY,QAAQ0H,QAAQ,UAC5BtH,QAASqR,EAFX,8BAOF,cAAC,KAAD,CACEtU,KAAK,WAAW7F,MAAOkI,EAAM0S,KAAMC,QAAS3S,EAAM0S,KAClDrB,SAAU,kBAAMrR,EAAM4S,SAAQ,SAAAtM,GAAC,OAAKA,QA3BxC,sBA8BE,uBACA,cAAC,IAAD,CAAQ1F,QAASqR,EAAjB,8BAGF,cAAC,KAAD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAO3L,EAAE,MAAM4B,QAAQ,UAAU1H,YAAY,QAAQjE,GAAG,OAAOqL,YAAY,SAC3E,cAAC,IAAD,CAAQM,QAAQ,UAAU1H,YAAY,QAAQI,QAAS,kBApEjD,WAAO,IAEnBwP,EAAM,CAAElL,IAAK,OAAQpN,MADHgJ,SAASmG,eAAe,QAAxCnP,OAERka,GAAU,SAACL,GAAD,6BACJA,GADI,CACIvB,OAgEyDyC,IAA3D,2C,qBCyGDC,OA3Nf,SAAiB9S,GAAQ,IAAD,EACEC,oBAAS,GADX,mBACfyS,EADe,KACTE,EADS,KAEfvY,EAAWgI,KAAXhI,QAFe,EAG8B4F,oBAAS,GAHvC,mBAGf8S,EAHe,KAGKC,EAHL,OAIiB/S,qBAJjB,mBAIhB8G,EAJgB,KAIFC,EAJE,cAMPoL,EANO,gFAMtB,WAA2BlN,EAAKpN,GAAhC,2BAAA0B,EAAA,yDAGMsD,EAAKkD,EAAMlD,GACXhF,IACFA,EAAQgJ,SAASmG,eAAe,SAASnP,OAEvCoN,IACFA,EAAMpE,SAASmG,eAAe,OAAOnP,OAEvB,aAAZgF,EAAGa,KAVT,qBAYQ+U,EAZR,iCAa6BtT,GAAe,CAACtH,MAAMA,IAbnD,OAaUmb,EAbV,OAcMC,EAASD,EAAW5U,WACpBtE,QAAQC,IAAI,aAAckZ,GAfhC,wBAiBMA,EAASpb,EAjBf,eAoBQqb,EAAY,IAAIpV,KAGlBqS,EADC2C,EACK,CAACjb,MAAMob,EAASC,UAAUA,EAAW9Y,QAAQA,GAE7C,CAACvC,MAAMob,EAASC,UAAUA,GAzBtC,UA4BwB/T,GAAegR,GA5BvC,eA4BQgD,EA5BR,OA6BIrZ,QAAQC,IAAIoZ,EAAQ/U,YA7BxB,UA8BUvB,EAAGc,IAAI,CAACsH,IAAIA,EAAIpN,MAAMsb,EAAQC,SA9BxC,mCA+BuB,aAAZvW,EAAGa,KA/Bd,qBAgCOoV,EAhCP,kCAiCYjW,EAAGwW,IAAIpO,EAAK,CAACpN,MAAMA,EAAOuC,QAAQA,IAjC9C,iDAmCYyC,EAAGwW,IAAIpO,EAAI,CAACpN,MAAMA,IAnC9B,mCAqCuB,aAAZgF,EAAGa,KArCd,kCAsCUb,EAAGwC,IAAI,CAACiU,IAAIrO,EAAKpN,MAAMA,IAtCjC,mCAuCuB,YAAZgF,EAAGa,KAvCd,2BA0CM6V,EAAKC,WAAW3b,GA1CtB,0DA4CMiC,QAAQC,IAAI,2BA5ClB,4CA+CU8C,EAAG4W,IAAIF,GA/CjB,sCAkDU,IAAIzY,MAAM,uBAlDpB,QAsDEhB,QAAQC,IAAI,UACZgN,IAvDF,4DANsB,+BAiEP2M,EAjEO,8EAiEtB,WAA0BvD,GAA1B,iBAAA5W,EAAA,6DAEM0L,EAAMpE,SAASmG,eAAe,OAAOnP,MAF3C,SAGkBsH,GAAegR,GAHjC,cAGMvV,EAHN,OAIEd,QAAQC,IAAI,UAAUa,EAAIwD,YAC1B+T,EAAYlN,EAAKrK,EAAIwD,YALvB,kBAMSxD,GANT,4CAjEsB,kEA0EtB,4BAAArB,EAAA,6DACQL,EAAU2H,SAASmG,eAAe,iBAAiBnP,MACzDiC,QAAQC,IAAI,kBAAkBb,GAFhC,kBAIU6G,EAAMlD,GAAGlD,OAAOga,MAAM,SAAUza,GAJ1C,gFAMW,8BANX,QAQEY,QAAQC,IAAI,mBARd,0DA1EsB,kEAqFtB,gCAAAR,EAAA,sDACQ4N,EAAetG,SAASmG,eAAe,aAAaI,MAAM,GAE1DwM,EAAYzM,EAAavJ,KAAKnE,MAAM,KAAKoa,MAAMnD,eACjDrJ,EAAS,IAAIC,YACVC,WAAWJ,GAClBE,EAAOG,UAAY,WACf1N,QAAQC,IAAI,UAAWsN,EAAOyM,YAM9BJ,EALiB,SAAdE,EACKha,KAAKC,MAAMwN,EAAOrK,QAElBqK,EAAOrK,SAXrB,4CArFsB,sBAsGpB,SAAS+W,EAAgBC,GACpBA,IAAclN,EACfC,IAEAA,EAAgBiN,GAKpB,IAAMtM,EAAO,WAEX,OAAQZ,GACN,IAAK,UACL,OACE,eAAC,IAAD,WACqB,aAAnB/G,EAAMlD,GAAGoX,OAA2C,aAAnBlU,EAAMlD,GAAGoX,MAC1C,gCACE,cAAC,KAAD,CAAQ3X,GAAG,MAAMqL,YAAY,QAAc,uBAC3C,cAAC,KAAD,CAAQrL,GAAG,QAAQqL,YAAY,UAAgB,0BAElD,KACmB,YAAnB5H,EAAMlD,GAAGoX,MACR,cAAC,KAAD,CAAO3X,GAAG,QAAQoB,KAAK,SAASiK,YAAY,SAAStB,EAAE,QACxD,KAEmB,aAAnBtG,EAAMlD,GAAGoX,MACR,gCACE,cAAC,KAAD,CAAO3X,GAAG,MAAMqL,YAAY,OAC5B,cAAC,KAAD,CAAOrL,GAAG,QAAQqL,YAAY,UAAgB,0BAMjD,KAED,cAAC,IAAD,CACEpH,YAAY,QAAQ0H,QAAQ,UAC5B5B,EAAE,MACF1F,QAAS,WAAKwR,KAHhB,qBAQF,IAAK,aACL,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAO7V,GAAG,MAAMqL,YAAY,QAC5B,cAAC,KAAD,CACEhH,QAAS,WAAKE,SAASmG,eAAe,aAAae,SACnDtH,KAAM,cAACuH,GAAA,EAAD,IACNC,QAAQ,UACRzH,aAAa,aACbD,YAAY,UAEd,cAAC,KAAD,CACE2H,QAAM,EACNxK,KAAK,OACLpB,GAAG,cAIN,8BACC,cAAC,IAAD,CAAQ2L,QAAQ,UAAU1H,YAAY,QAAQI,QAAS,kBArK3C,0CAqK+CuT,IAA3D,0BAKJ,IAAK,aACL,OACE,cAAC,GAAD,CACG/B,YAAeA,EACfM,KAAQA,EACRE,QAAWA,IAIhB,IAAK,cACL,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAOrW,GAAG,gBAAgBqL,YAAY,6BACtC,cAAC,IAAD,CACEhH,QAAS,kBAxLC,0CAwLGwT,IACblM,QAAQ,UACRzH,aAAa,cACbD,YAAY,QAJd,8BASJ,QACA,OAAO,OAKb,OACE,gCACE,eAAC,KAAD,CAAa0H,QAAQ,UAArB,UACE,cAAC,IAAD,CAAQ1H,YAAY,QAAQ8Q,UAAWtR,EAAMqU,SAAUzT,QAAS,kBAAIoT,EAAgB,YAApF,uBACA,cAAC,IAAD,CAAQxT,YAAY,QAAQ8Q,UAAWtR,EAAMqU,UAA+B,aAAnBrU,EAAMlD,GAAGoX,MAAsBtT,QAAS,kBAAIoT,EAAgB,eAArH,8BACA,cAAC,IAAD,CAAQxT,YAAY,QAAQ8Q,UAAWtR,EAAMqU,SAAUzT,QAAS,kBAAIoT,EAAgB,eAApF,8BACA,cAAC,IAAD,CAAQxT,YAAY,QAAQ8Q,UAAWtR,EAAMqU,SAAUzT,QAAS,kBAAIoT,EAAgB,gBAApF,4BAEF,eAAC,IAAD,WACE,cAACrM,EAAD,IACCZ,GAAgC,gBAAhBA,EACf,eAAC,IAAD,WACE,cAAC,KAAD,CAAUmB,QAAQ,UAAU1H,YAAY,QAAQ7C,KAAK,WAAW7F,MAAO4a,EAAM4B,UAAW5B,EAAMrB,SAAU,kBAAIuB,GAASF,IAArH,iCACA,cAAC,KAAD,CAAUxK,QAAQ,UAAU1H,YAAY,QAAQ7C,KAAK,WAAW7F,MAAOib,EAAoBuB,UAAWvB,EAAoB1B,SAAU,kBAAI2B,GAAuBD,IAA/J,qCAED,Y,sBC3EIwB,OAvIf,SAAgBvU,GAAQ,IAAD,IACCC,mBAAS,IADV,mBACduU,EADc,KACTC,EADS,OAEuBxU,qBAFvB,mBAEdyU,EAFc,KAEEC,EAFF,KAGfN,EAAW,SAACvX,GAChB,IACE,OAAOA,EAAGlD,OAAOgb,OAAOhE,SAAS5Q,EAAMyG,OAAgC,MAAvB3J,EAAGlD,OAAOgb,OAAO,GAClE,SACC,OAAO,IAGLjX,EAAOqC,EAAMlD,GAAGoX,MAVD,4CAarB,WAAwBvW,EAAM9C,EAAKgE,GAAnC,iBAAArF,EAAA,sDACc,GACN4G,EAAO,GAFf,KAIYzC,EAJZ,OAKW,QALX,OASW,QATX,OAaW,WAbX,QAiBW,SAjBX,+BAMQ0B,EAAOW,EAAMlD,GAAGiC,IAAIlE,GACpBuF,EAAO,0DAPf,6CAUuBxB,GAAU/D,GAVjC,eAUUwE,EAVV,OAWUe,EAAO,wDAXjB,8CAcuBnB,GAAapE,GAdpC,eAcUwE,EAdV,OAeUe,EAAO,4CAfjB,8CAkBuBZ,GAAY3E,GAlBnC,eAkBUwE,EAlBV,OAmBUe,EAAO,yDAnBjB,oCAsBQf,EAAO,QACPe,EAAO,QAvBf,6BA2BIrG,QAAQC,IAAIqF,GAQZoV,EANE,8BACE,uCAAS,uBAAOrU,QA9BxB,6CAbqB,sBAmDrB,OACE,eAAC,KAAD,WACGJ,EAAMlD,GACL,gCACA,eAAC,KAAD,WACE,cAAC,KAAD,UAAW,cAAC,GAAD,CAAcsD,KAAMJ,EAAMlD,GAAGP,OACxC,eAAC,KAAD,oBAAqBoB,KACpBqC,EAAMlD,GAAGlD,OAAOgb,OACf,eAAC,KAAD,sBAAoD,MAA7B5U,EAAMlD,GAAGlD,OAAOgb,OAAO,GAAY,SAAW5U,EAAMlD,GAAGlD,OAAOgb,OAAO,GAAGvO,MAAM,EAAE,GAAvG,QACC,KACH,eAAC,KAAD,2BAA4BgO,EAASrU,EAAMlD,IAAM,OAAO,YAG1D,cAAC,GAAD,CACEA,GAAMkD,EAAMlD,GACZuX,SAAYA,EAASrU,EAAMlD,OAGpB,OAALkD,QAAK,IAALA,GAAA,UAAAA,EAAO8E,eAAP,eAAgBgE,QAAS,EACzB,eAAC,KAAD,CAAOZ,QAAQ,SAAf,UACE,eAAC,KAAD,qBAAsBlI,EAAM8E,QAAQgE,OAAS,EAAI,EAAI9I,EAAM8E,QAAQgE,OAAnE,aACA,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,kBACA,cAAC,KAAD,oBACU,aAATnL,EACD,cAAC,KAAD,wBACC,UAGL,cAAC,KAAD,UACCqC,EAAM8E,QAAQ5H,KAAI,SAACqQ,EAAG5N,GACpB,IAAD,IAAC,OACD,eAAC,KAAD,WACE,cAAC,KAAD,UAAK4N,EAAEnT,QAAQtC,MAAMoN,MACX,aAATvH,EACD,cAAC,KAAD,UAAK4P,EAAEnT,QAAQtC,MAAMA,MAAMA,QAG3B,cAAC,KAAD,WAAK,UAAAyV,EAAEnT,eAAF,mBAAWtC,aAAX,eAAkBA,OAAOyV,EAAEnT,QAAQtC,MAAMA,MAAMuO,MAAM,EAAE,GAAK,YAE3D,aAAP1I,EACD,cAAC,KAAD,UACA,eAAC,IAAD,WACA,cAAC,KAAD,CACA6C,YAAY,QACZC,aAAW,eACXC,KAAM,cAACmU,GAAA,EAAD,IACNjU,QAAS,kBAAIvD,EAAakQ,EAAEnT,QAAQtC,MAAMA,UAG1C,eAAC,KAAD,CAAQ8P,YAAY,SAASyJ,SAAU,SAAClU,GAAD,OAAKwX,EAAkBxX,EAAEwP,OAAO7U,QAAQA,MAAO4c,EAAtF,UACA,wBAAQ5c,MAAM,SAAd,iBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,OAAd,qBAGA,cAAC,KAAD,CACAsO,WAA6B,OAAjBsO,EACZlU,YAAY,QACZC,aAAW,eACXC,KAAM,cAAC+Q,GAAA,EAAD,IACN7Q,QAAS,SAACzD,GAAD,OAjHF,+CAiHO2X,CAASJ,EAAgBnH,EAAEnT,QAAQtC,MAAMA,eAItD,gBAMN,wDACQ,KAAR0c,EAAYA,EAAM,QAEnB,KAEF,oBAAInC,UAAU,cCzFP0C,OA3Cf,SAAsB/U,GAAQ,IAAD,EACRhI,IAAZwM,EADoB,sBAEGvE,oBAAS,GAFZ,mBAEpBkC,EAFoB,KAEXY,EAFW,OAGa9C,qBAHb,mBAGpB+U,EAHoB,KAGNC,EAHM,KAIrBC,EAAgB,CAAC,CAACrX,KAAK,aAAcf,GAAG0H,EAAS1H,GAAIgI,QAAQN,EAASM,SAC3E,CAACjH,KAAK,UAAUf,GAAG0H,EAAS2Q,UAAUrQ,QAAQN,EAASuE,gBACxD,CAAClL,KAAK,QAAQf,GAAG0H,EAAS4Q,QAAQtQ,QAAQN,EAAS6Q,cACnD,CAACxX,KAAK,UAAUf,GAAG0H,EAAS8Q,QAAQxQ,QAAQN,EAAS+Q,cAE/CC,EAAW,SAAC3X,GAAQ,OAAOqX,EAAc1C,MAAK,SAAAjF,GAAC,OAAEA,EAAE1P,OAASA,MAClE,OACI,eAAC,KAAD,WACGsE,EACC,gCACE,cAAC,KAAD,IACA,oEAED,KAED,gCACA,eAAC,KAAD,CAAQyF,YAAY,WAAWyJ,SAAU,SAAClU,GAAD,OAAK8X,EAAgB9X,EAAEwP,OAAO7U,QAAvE,UACE,wBAAQA,MAAM,aAAawZ,UAAW9M,EAASM,QAAQgE,OAAQ,EAA/D,yBACA,wBAAQwI,UAAW9M,EAASuE,eAAeD,OAAQ,EAAGhR,MAAM,UAA5D,sBACA,wBAAQwZ,UAAW9M,EAAS6Q,aAAavM,OAAQ,EAAGhR,MAAM,QAA1D,mBACA,wBAAQwZ,UAAW9M,EAASiR,aAAa3M,OAAQ,EAAGhR,MAAM,UAA1D,wBAGDkd,EACC,cAAC,GAAD,CACEnX,KAAQmX,EACRlY,GAAM0Y,EAASR,GAAclY,GAC7BgI,QAAW0Q,EAASR,GAAclQ,QAClC2B,KAAQjC,EAASiC,KACjB1D,WAAcA,IAEf,Y,WCuFE2S,OAvHf,SAAmB1V,GAAQ,IAAD,EACMC,oBAAS,GADf,mBACjBkC,EADiB,KACRY,EADQ,OAEJ9C,mBAAS,MAFL,mBAEjBnD,EAFiB,KAEb6Y,EAFa,OAGM1V,mBAAS,IAHf,mBAGjB6E,EAHiB,KAGR8Q,EAHQ,KAIlBvB,EAAW,SAACvX,GAChB,IACE,OAAOA,EAAGlD,OAAOgb,OAAOhE,SAAS5Q,EAAMyG,OAAgC,MAAvB3J,EAAGlD,OAAOgb,OAAO,GAClE,SACC,OAAO,IA+BX,OA3BAzQ,oBAAS,sBAAC,iBAESS,EAFT,WAAApL,EAAA,0FAAAA,EAAA,MAEN,WAAuBL,GAAvB,iBAAAK,EAAA,sEACmBoD,EAAMzD,GADzB,YACQ2D,EADR,4BAKoB,aAAZA,EAAGa,MAAmC,SAAZb,EAAGa,KALrC,iCAMkBb,EAAGL,SAAS,CAAEC,MAAO,KAAMC,UAAUkI,UANvD,OAMI1K,EANJ,+BAQIA,EADqB,YAAZ2C,EAAGa,KACJ,CAAC,CAAEvD,QAAS,CAAEtC,MAAOgF,EAAGhF,SACX,aAAZgF,EAAGa,KACJoH,OAAOC,KAAKlI,EAAGmI,KAAK/H,KAAI,SAAAC,GAAC,MAAK,CAAE/C,QAAS,CAAEtC,MAAO,CAACoN,IAAK/H,EAAGrF,MAAOgF,EAAGiC,IAAI5B,SAC5D,aAAZL,EAAGa,KACJb,EAAGqI,OAAM,SAAAhI,GAAC,OAAU,OAANA,IAAY,CAACiI,QAAQ,IAAOP,UAE1C,CAAC,CAAEzK,QAAS,CAAEtC,MAAO,UAdjC,QAgBI6d,EAAM7Y,GACN8Y,EAAW,aAAIzb,IACf4I,GAAW,GAlBf,6CAFM,uBAES6B,EAFT,4CACN7B,GAAW,GAsBb6B,EAAQ5E,EAAM7G,SAvBN,2CAwBR,CAAC6G,EAAM7G,QAASwc,EAAOC,IAIrB,cAAC,KAAD,UACC9Y,EACC,8BACCqF,EAAS,cAAC,KAAD,IACV,gCACA,cAAC,GAAD,CACErF,GAAMA,EACNuX,SAAYA,EAASvX,GACrB8Y,WAAcA,IAEhB,cAAC,GAAD,CAAcxV,KAAMJ,EAAM7G,UACvB2L,GAAWA,EAAQgE,OAAS,EAC3B,cAAC,IAAD,UACA,eAAC,KAAD,CAAOR,KAAK,KAAZ,UACE,cAAC,KAAD,CAAcC,UAAU,MAAMiD,MAAO,CAAC9C,MAAM,QAAS3C,WAAW,QAAhE,SACE,eAAC,KAAD,2BAAoBsO,EAASvX,GAAI,MAAM,UAEzC,cAAC,KAAD,UACE,eAAC,KAAD,WACgB,aAAbA,EAAGoX,MACJ,cAAC,KAAD,wBACC,KACa,YAAbpX,EAAGoX,MACJ,cAAC,KAAD,kBACC,KACD,cAAC,KAAD,yBAGJ,cAAC,KAAD,UACDpP,EAAQ5H,KAAI,SAACqQ,EAAG5N,GAAQ,OACvB,eAAC,KAAD,WACc,aAAb7C,EAAGoX,MACJ,cAAC,KAAD,UACE,cAAC,KAAD,CACE1T,YAAY,QACZC,aAAW,eACXG,QAAS,kBAAIvD,EAAakQ,EAAEnT,QAAQtC,MAAMA,QAC1C4I,KAAM,cAAC+Q,GAAA,EAAD,QAGT,KACa,YAAb3U,EAAGoX,MACF,eAAC,KAAD,WACE,4BAAI3G,EAAEnT,QAAQtC,MAAMoN,MAEN,aAAbpI,EAAGoX,MACJ,4BAAI3G,EAAEnT,QAAQtC,MAAMyb,MACnB,QAEF,KAEa,aAAbzW,EAAGoX,MACF,cAAC,KAAD,UAAK3G,EAAEnT,QAAQtC,MAAMA,MAAMA,MAAMyV,EAAEnT,QAAQtC,MAAMA,MAAMA,MAAMyV,EAAEnT,QAAQtC,MAAMA,QAC9E,KACc,aAAbgF,EAAGoX,OAAqC,aAAbpX,EAAGoX,MAC9B,cAAC,KAAD,UAAK3G,EAAEnT,QAAQtC,MAAMA,QACtB,KACa,YAAbgF,EAAGoX,MACF,cAAC,KAAD,UAAK3G,EAAEnT,QAAQtC,QAChB,OA7BM6H,aAoCb,cAAC,KAAD,UACA,eAAC,KAAD,8CAAsC,cAAC,KAAD,CAAMkW,KAAK,8CAA8ClJ,OAAO,SAASmJ,IAAI,aAAatK,MAAO,CAAC9C,MAAM,SAAxG,wCAMzC,4DCtDQqN,GA3DQ,SAAC/V,GAAW,IAAD,EACAC,oBAAS,GADT,mBACzB+V,EADyB,KACfC,EADe,KAEzB9X,EAAYkE,KAAZlE,SAED+X,EAAW,uCAAG,kCAAA1c,EAAA,6DACd2c,EAASrV,SAASmG,eAAe,UAAUnP,MAC3C6F,EAAOmD,SAASmG,eAAe,QAAQnP,MACvCoG,EAAc4C,SAASmG,eAAe,eAAenP,MACrDsG,EAAQ0C,SAASmG,eAAe,SAASnP,MAJ3B,SAOhBmG,GAAekY,EAAQxY,EAAMO,EAAaC,EAAUC,GACnDmH,MAAK,SAAChH,GACLxE,QAAQC,IAAI,UAAWuE,GACvBnC,IAAkBmJ,MAAK,SAAClG,GACtBtF,QAAQC,IAAI,kBAAmBqF,SAXnB,2CAAH,qDAiBjB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE6I,QAAQ,UAAU1H,YAAY,QAC9BI,QAAS,kBAAMqV,GAAY,SAAAG,GAAC,OAAKA,MAFnC,uBAMCJ,GACC,eAAC,IAAD,WACE,cAAC,KAAD,CAAOzZ,GAAG,SAASqL,YAAY,SAC/B,eAAC,KAAD,CAAQrL,GAAG,OAAX,UACE,wBAAQzE,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAWue,UAAQ,EAAjC,uBACA,wBAAQve,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,wBAEF,eAAC,KAAD,CAAQyE,GAAG,cAAX,UACE,wBAAQzE,MAAM,SAAd,oBACA,wBAAQA,MAAM,GAAGue,UAAQ,EAAzB,qBACA,wBAAQve,MAAM,UAAd,6BACA,wBAAQA,MAAM,UAAd,kCAEY,YAAbke,GACC,cAAC,KAAD,CAAOzZ,GAAG,QAAQqL,YAAY,gBAEhC,cAAC,IAAD,CACEM,QAAQ,UAAU1H,YAAY,QAAQ8F,EAAE,MACxC1F,QAASsV,EAFX,4BClBKI,GAhCQ,WAAO,IAAD,EACHrW,oBAAS,GADN,mBACpBpD,EADoB,KACd0Z,EADc,iDAG3B,8BAAA/c,EAAA,+DAEIsH,SAASmG,eAAe,gBADX9N,EADjB,EACQrB,MAASqB,QAGfY,QAAQC,IAAIb,GAJd,SAKQsE,GAAYtE,GALpB,OAMEY,QAAQC,IAAI,UACZuc,GAAQ,GAPV,4CAH2B,sBAa3B,OACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAQrO,QAAS,UAAU1H,YAAY,QAAQI,QAAS,kBAAI2V,GAAS1Z,IAArE,uBACCA,EACC,eAAC,IAAD,WACE,cAAC,KAAD,CAAON,GAAG,eAAeqL,YAAY,UAAUtB,EAAE,QACjD,cAAC,KAAD,CACE5F,KAAM,cAAC+Q,GAAA,EAAD,IACNjR,YAAY,QACZI,QAAS,kBAtBM,0CAsBFhD,IAHf,uBAOD,S,iCCwEI4Y,OA3Ff,SAAuBxW,GAAQ,IAAD,IACThI,IAAZwM,EADqB,sBAEFvE,mBAASuE,EAASlN,UAFhB,mBAErBmf,EAFqB,KAEdC,EAFc,OAGMzW,oBAAS,GAHf,mBAGrB0W,EAHqB,KAGVC,EAHU,cAKbC,IALa,2EAK5B,4BAAArd,EAAA,6DACEO,QAAQC,IAAI,cADd,SAE0BoC,IAF1B,OAEM0a,EAFN,OAGEJ,EAASI,GAHX,4CAL4B,sBAc5B,OAJA3S,qBAAU,WACR0S,MACA,CAACrS,EAASlN,SAAS0I,EAAMlD,KAGrB,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IAEA,cAAC,IAAD,CAAQia,MAAM,MAAd,SACkC,KAAvB,OAARvS,QAAQ,IAARA,GAAA,UAAAA,EAAUlN,gBAAV,eAAoBwR,QACnB,8BACG6N,EACC,eAAC,IAAD,WACE,cAAC,KAAD,CACEnW,YAAY,QACZC,aAAW,UACXG,QAAS,kBAAIgW,KACblW,KAAM,cAACsW,GAAA,EAAD,MAGR,cAAC,GAAD,CACAvQ,KAAQjC,EAASiC,KACjBtN,QAAWwd,OAIf,eAAC,IAAD,WACA,eAAC,IAAD,WACE,cAAC,KAAD,CAAMjO,MAAM,QAAZ,0BACA,cAAC,KAAD,CACAlI,YAAY,QACZE,KAAM,cAACuW,GAAA,EAAD,IACNxW,aAAW,aACXG,QAAS,kBAAIiW,UAGf,eAAC,KAAD,CAAOvO,KAAK,KAAZ,cACE,cAAC,KAAD,8BACA,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,mBACA,cAAC,KAAD,mBACA,cAAC,KAAD,6BAGN,cAAC,KAAD,UACGmO,EAAMvZ,KAAI,SAAAqQ,GAAM,OACjB,eAAC,KAAD,WACC,cAAC,KAAD,UAAKA,EAAEnT,QAAQtC,MAAM+F,OACrB,cAAC,KAAD,UAAK0P,EAAEnT,QAAQtC,MAAM6F,OACrB,eAAC,KAAD,WACC,cAAC,KAAD,CACE6C,YAAY,QACZC,aAAW,OACXG,QAAS,kBAAIgW,EAAarJ,EAAEnT,QAAQtC,MAAMqB,UAC1CuH,KAAM,cAACwW,GAAA,EAAD,MAGR,cAAC,KAAD,CACE1W,YAAY,QACZC,aAAW,SACXG,QAAS,kBAAItC,GAAeiP,IAC5B7M,KAAM,cAACoR,GAAA,EAAD,IAJR,kCAeP,kD,qBC4CEqF,OA/Hf,WA4FE,OACE,cAAC,EAAD,CAAexf,aA5FI,CACnB8O,KAAM,KACN3J,GAAI,KACJgI,QAAS,GACTsQ,QAAS,KACTC,aAAc,GACdF,UAAW,KACXpM,eAAgB,GAChBuM,QAAS,KACTG,aAAc,GACdne,SAAU,GACVoO,cAAe,WACfF,WAAY,WACZ4R,SAAS,EACTjV,QAAS,CACP7K,UAAU,IA6E+BI,QAzE7B,SAAC2f,EAAOC,GACtB,OAAQA,EAAO3Z,MACb,KAAKzF,EAAaC,SAChB,OAAO,2BACFkf,GADL,IAEE5Q,KAAM6Q,EAAO3R,YAEjB,KAAKzN,EAAgBO,YACnB,OAAO,2BACF4e,GADL,IAEE3R,cAAe4R,EAAO5R,gBAE1B,KAAKxN,EAAgBM,SACnB,OAAO,2BACF6e,GADL,IAEE7R,WAAY8R,EAAO9R,aAEvB,KAAKtN,EAAWE,OACd,OAAO,2BACFif,GADL,IAEEva,GAAIwa,EAAOxa,GACXgI,QAASwS,EAAOxS,UAEpB,KAAK5M,EAAgBG,YACnB,OAAO,2BACFgf,GADL,IAEEjC,QAASkC,EAAOxa,GAChBuY,aAAciC,EAAOxS,UAEzB,KAAK5M,EAAkBI,cACrB,OAAO,2BACF+e,GADL,IAEElC,UAAWmC,EAAOxa,GAClBiM,eAAgBuO,EAAOxS,UAE3B,KAAK5M,EAAgBK,YACnB,OAAO,2BACF8e,GADL,IAEE/B,QAASgC,EAAOxa,GAChB2Y,aAAc6B,EAAOxS,UAEzB,KAAK5M,EAAiBqf,YACpB,OAAO,2BACFF,GADL,IAEED,QAASE,EAAOF,UAEpB,KAAKlf,EAAiBsf,oBACpB,OAAO,2BACFH,GADL,IAEED,QpB3CkB,YoB6CtB,KAAKlf,EAAiBQ,aACpB,OAAO,2BACF2e,GADL,IAEE/f,SAAUggB,EAAOhgB,WAErB,KAAKY,EAAiBS,qBACpB,OAAO,2BACF0e,GADL,IAEElV,QAAQ,2BAAMkV,EAAMlV,SAAb,IAAsB7K,SAAUggB,EAAOnV,YAGlD,QACE,OAAOkV,IAUX,SACA,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,KAAD,CACEI,gBAAgB,UAChB/O,MAAM,QAFR,SAIE,eAAC,KAAD,WACE,cAAC,GAAD,CAAQpC,EAAE,SACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoR,OAAK,EAAC7Y,KAAK,mBAAmB8Y,UAAW5C,KAChD,cAAC,IAAD,CAAO2C,OAAK,EAAC7Y,KAAK,kBAAkB8Y,UAAWnB,KAC/C,cAAC,IAAD,CAAO3X,KAAK,IAAI8Y,UAAWnI,KAC3B,cAAC,IAAD,CAAUoI,GAAG,qBC3GZC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBxS,MAAK,YAAkD,IAA/CyS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJzX,SAASmG,eAAe,SAM1B4Q,M","file":"static/js/main.92d162dd.chunk.js","sourcesContent":["import IPFS from 'ipfs'\nimport OrbitDB from 'orbit-db'\nimport DaoHausController from './access_test'\nimport CID from 'cids'\nimport AccessControllers from 'orbit-db-access-controllers'\nimport CONFIG from './config'\n\nAccessControllers.addAccessController({\n  AccessController: DaoHausController\n})\n\nlet orbitdb\nlet ipfsNode\n\nlet programs\n\nexport const initIPFS = async () => {\n  if(!ipfsNode) {\n    ipfsNode = await IPFS.create(CONFIG.ipfs)\n  }\n  return ipfsNode\n}\n\nexport const initOrbitDB = async (ipfs) => {\n  if(!orbitdb) {\n    orbitdb = await (\n      OrbitDB.createInstance(\n        ipfs,\n        {\n          repo: './orbitDB',\n          AccessControllers,\n        }\n      )\n    )\n  }\n  console.log('orbit instance: ', orbitdb)\n  return orbitdb\n}\n\nexport const getAllDatabases = async () => {\n  if(!programs && orbitdb) {\n    programs = await orbitdb.feed('browser.programs', {\n      accessController: { write: [orbitdb.identity.id] },\n      create: true,\n    })\n    await programs.load()\n  }\n  return (\n    programs ? (\n      programs.iterator({ limit: -1 }).collect()\n    ) : []\n  )\n}\n\nexport const getDB = async (address) => {\n  let db\n  if(orbitdb) {\n    db = await orbitdb.open(address)\n    await db.load()\n    db.events.on('replicated', () => {\n      console.log('replicated', db)\n      const result = (\n        db.iterator({ limit: -1 }).collect()\n        .map(e => e.payload.value) // gives an error\n      )\n      console.table(result)\n    })\n  }\n  return db\n}\n\nexport function ipldExplorer(address) {\n  let url = `https://explore.ipld.io/#/explore/${address}`\n  if(url) window.open(url, '_blank').focus()\n}\n\nexport const addDatabase = async (address) => {\n  const { dbname, type } = await getDB(address)\n  return programs.add({\n    name: dbname,\n    type,\n    address,\n    added: Date.now()\n  })\n}\n\nexport const createDatabase = async (name, type, permissions, provider, extra) => {\n  let accessController\n  let options\n  switch (permissions) {\n    case 'public':\n      accessController = { write: ['*'] }\n    break\n    case 'daoHaus':\n      options = {\n        ipfs: ipfsNode, web3: provider,\n        contractAddress: extra,\n        accessController: { type: 'daohausmember' }\n        //,defaultAccount: [orbitdb.identity.id]\n      }\n    break\n    case 'orbitdb':\n      accessController = {\n        type:'orbitdb', write: [orbitdb.identity.id]\n      }\n    break\n    default:\n      accessController = { write: [orbitdb.identity.id] }\n    break\n  }\n\n  let db\n  if(options) {\n    db = await orbitdb.create(name, type, { options })\n  } else {\n    db = await orbitdb.create(name, type, { accessController })\n  }\n\n  return programs.add({\n    name,\n    type,\n    address: db.address.toString(),\n    added: Date.now()\n  })\n}\n\nexport const removeDatabase = async (hash) => {\n  console.log('Removing', hash)\n  return programs.remove(hash)\n}\n\nexport const getPublicKey = async () => (\n  (await ipfsNode.id()).publicKey\n)\n\nconst recreateCid = (cid) => (\n  new CID(cid)\n)\n\nexport const { isCID } = CID\n\nexport const getDagCid = async (cid, path) => {\n  if(!isCID(cid)) {\n    cid = recreateCid(cid)\n  }\n  let dataR = await ipfsNode.dag.get(cid, { path })\n  if(dataR) {\n    return dataR\n  } else {\n    console.log('Error! Data is undefined')\n  }\n}\n\nexport const getDagObject = async (cid) =>{\n  // difference v1 and v0.. retrieve both obv..\n  for await (const result of ipfsNode.cat(cid.toString())) {\n    return result\n  }\n}\n\nexport const getV0 = async (cid) => ( //asyncgenerator\n  await ipfsNode.get(cid)\n)\n\nexport const getIpfs = getV0\n\nexport const dagPreparation = async (data) => (\n  // in put {pin:true}\n  await ipfsNode.dag.put(data)\n)\n\nexport const addIpfs = async (data) => {\n  const { cid } = await ipfsNode.add(data)\n  console.log('Added', cid)\n  return cid\n}\n\nexport const getTreeIpfs = async (cid, path) => {\n  if(!isCID(cid)){\n    cid = recreateCid(cid)\n  }\n  const results = []\n  const tree = await ipfsNode.dag.tree(cid, { path })\n  for await (const item of tree) {\n    results.push(item)\n  }\n  return results\n}\n\nexport const getFromIpfs = async (cid) =>{\n  const stream = ipfsNode.cat(cid)\n  let data = ''\n  for await (const chunk of stream) {\n    // chunks of data are returned as a Buffer, convert it back to a string // it doesn't work!\n    data += chunk.toString()\n  }\n  if(data !== '') {\n    return data\n  }\n  return `Nothing was found in '${cid.toString()}'`\n}\n","import React, { createContext, useReducer, useContext } from 'react'\n\nexport const StateContext = createContext()\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n)\n\nexport const useStateValue = () => useContext(StateContext)\n\nexport const actions = {\n  USER: {\n    SET_USER: 'SET_USER'\n  },\n  DB: {\n    SET_DB: 'SET_DB'\n  },\n  DBGUIDE:{\n    SET_DBGUIDE:'SET_DBGUIDE'\n  },\n  DBDAGTEST:{\n    SET_DBDAGTEST:'SET_DBDAGTEST'\n  },\n  DBUSERS:{\n    SET_DBUSERS:'SET_DBUSERS'\n  },\n  SYSTEMS: {\n    SET_IPFS: 'SET_IPFS',\n    SET_ORBITDB: 'SET_ORBITDB'\n  },\n  PROGRAMS: {\n    SET_PROGRAMS: 'SET_PROGRAMS',\n    SET_PROGRAMS_LOADING: 'SET_PROGRAMS_LOADING',\n  }\n\n}\n\nexport const loadingState = 'loading'\n","const AccessController = require('orbit-db-access-controllers/src/access-controller-interface')\n\n// const isValidEthAddress = require('./utils/is-valid-eth-address')\nconst io = require('orbit-db-io')\nconst abi = [{\"type\":\"function\",\n\"stateMutability\":\"view\",\n\"payable\":false,\n\"outputs\":[{\"type\":\"address\",\"name\":\"delegateKey\"},\n{\"type\":\"uint256\",\"name\":\"shares\"},\n{\"type\":\"uint256\",\"name\":\"loot\"},\n{\"type\":\"bool\",\"name\":\"exists\"},\n{\"type\":\"uint256\",\"name\":\"highestIndexYesVote\"},\n{\"type\":\"uint256\",\"name\":\"jailed\"}],\n\"name\":\"members\",\n\"inputs\":[{\"type\":\"address\",\"name\":\"\"}],\n\"constant\":true}]\n\nexport default class DaoHausController extends AccessController {\n    constructor (ipfs, web3, address, defaultAccount) {\n      super()\n      this._ipfs = ipfs\n      this.web3 = web3\n      this.abi = abi\n      this.contractAddress = address\n      this.defaultAccount = defaultAccount\n    }\n\n    static get type () { return 'othertype' } // Return the type for this controller\n\n    get address () {\n      return this.contractAddress\n    }\n\n\n    async load (address) {\n      if (address) {\n        try {\n          if (address.indexOf('/ipfs') === 0) { address = address.split('/')[2] }\n          const access = await io.read(this._ipfs, address)\n          this.contractAddress = access.contractAddress\n          this.abi = JSON.parse(access.abi)\n        } catch (e) {\n          console.log('ContractAccessController.load ERROR:', e)\n        }\n      }\n      this.contract = new this.web3.Contract(this.abi, this.contractAddress)\n    }\n\n    async canAppend(entry) {\n      console.log(entry)\n      if(!entry.payload.value.account){\n        return 'Error, no account in entry'\n      }\n      const memberRequest = await this.contract.methods.members(entry.payload.value.account).call()\n      if(memberRequest){\n        console.log(memberRequest)\n        // let isMember = memberRequest.exists\n        return true\n      }else{\n        return false\n      }\n    }\n\n    async grant (access, identity) {} // Logic for granting access to identity\n\n\n    async save () {\n      let cid\n      try {\n        cid = await io.write(this._ipfs, 'dag-cbor', {\n          contractAddress: this.address,\n          abi: JSON.stringify(this.abi, null, 2)\n        })\n      } catch (e) {\n        console.log('ContractAccessController.save ERROR:', e)\n      }\n      // return the manifest data\n      return { address: cid }\n    }\n\n    static async create (orbitdb, options) {\n      if (!options.contractAddress && !options.address) {\n        throw new Error(\"No 'contractAddress' given in options\")\n      }\n      if (!options.web3) {\n        throw new Error(\"No 'web3' given in options\")\n      }\n      if (!options.defaultAccount) {\n        console.warn('WARNING: no defaultAccount set')\n      }\n\n      return new DaoHausController(\n        orbitdb._ipfs,\n        options.web3,\n        options.contractAddress,\n        options.defaultAccount\n      )\n    }\n\n}\n\n// receive a dao contract,\n// check signature in entry\n// validate address in contract\n// perform entry\n\n// access control:\n//P2P\n//---\n// Owner user grants to user\n\n// Add web3 context, get user address and send it in each entry\n// Later that should be a signature that will be handled (and verifyied by the access control)\n// access control should look at the contract members and only allow those to make entries!\n\n// Contract based\n// ---\n// User can write if address in contract? => DAO!\n// Raid Guild cohort season 1 DAO : 0x10E31C10FB4912BC408Ce6C585074bd8693F2158\n// method: members(addres) >\n// delegateKey(address) shares(uint256) loot(uint256) exists(bool) highestIndexYesVote(uint256) jailed(uint256)\n// [\n// (address) : 0x08b3931b2ae83113c711c92e1bb87989f1fab004\n// (uint256) : 10\n// (uint256) : 0\n// (bool) : true\n// (uint256) : 0\n// (uint256) : 0\n// ]\n","const config = {\n  ipfs: {\n    // preload: {\n    //   enabled: false\n    // },\n    repo: \"ipfs/shared\",\n    relay: { enabled: true, hop: { enabled: true, active: true } },\n    EXPERIMENTAL: {\n      pubsub: true\n    },\n    config: {\n      Addresses: {\n        Swarm: [\n          // \"/ip4/127.0.0.1/tcp/4001\",\n          // \"/ip6/::/etcp/4001\",\n          // \"/ip4/127.0.0.1/tcp/4002/ws\",\n          '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star/',\n          '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star/',\n          '/dns4/webrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star/',\n          // '/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star',\n        ]\n      }\n    }\n  }\n}\n\nexport default config\n","import React, {useState} from \"react\";\nimport { Text, IconButton, HStack, Tooltip } from \"@chakra-ui/react\"\nimport {CopyIcon} from '@chakra-ui/icons'\n\nfunction CopyableText(props) {\n  const [copied, setCopied] = useState(false)\n\n  function copyToClipboard() {\n    var copyText = document.querySelector(\"#copyable\");\n    var range = document.createRange();\n    range.selectNode(copyText);\n    window.getSelection().addRange(range);\n    // console.log('Copied ',copyText,' to the clipboard')\n    document.execCommand(\"copy\");\n    setCopied(true);\n  }\n\n  return (\n    <HStack>\n      <Text id='copyable'>{props.text}</Text>{''}\n      <Tooltip\n        closeDelay={500}\n        isOpen={copied}\n        label=\"Copied!\"\n      >\n      <IconButton\n        colorScheme=\"white\"\n        aria-label=\"Copy it!\"\n        icon={<CopyIcon />}\n        onClick={()=>copyToClipboard()}\n        />\n      </Tooltip>\n    </HStack>\n\n\n  );\n}\nexport default CopyableText;\n","import WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { ethers } from \"ethers\";\nimport Web3Modal, { IProviderOptions } from \"web3modal\";\nimport Web3 from \"web3\";\n\nconst networkNames = {\n  1: \"ETH Mainnet\",\n  42: \"Kovan Testnet\",\n  3: \"Ropsten Testnet\",\n  4: \"Rinkeby Testnet\",\n  5: \"Göerli Testnet\",\n};\n\n\nconst chainUrls = {\n  1: {\n    rpc: \"https://mainnet.infura.io/v3/d96fbcc2473445f091831576efa0255f\",\n    explorer: \"https://etherscan.io/\",\n    chainId: 1,\n    name: networkNames[1],\n  },\n  3: {\n    rpc: \"https://ropsten.infura.io/v3/d96fbcc2473445f091831576efa0255f\",\n    explorer: \"https://ropsten.etherscan.io/\",\n    chainId: 3,\n    name: networkNames[3],\n  },\n  4: {\n    rpc: \"https://rinkeby.infura.io/v3/d96fbcc2473445f091831576efa0255f\",\n    explorer: \"https://rinkeby.etherscan.io/\",\n    chainId: 4,\n    name: networkNames[4],\n  },\n  5: {\n    rpc: \"https://kovan.infura.io/v3/d96fbcc2473445f091831576efa0255f\",\n    explorer: \"https://kovan.etherscan.io/\",\n    chainId: 5,\n    name: networkNames[5],\n  },\n  42: {\n    rpc: \"https://goerli.infura.io/v3/d96fbcc2473445f091831576efa0255f\",\n    explorer: \"https://goerli.etherscan.io/\",\n    chainId: 42,\n    name: networkNames[42],\n  },\n};\n\n\nconst getRPCUrl = (chainId: number) => chainUrls[chainId || 1].rpc;\n\n\nconst Web3Context = createContext({\n  account: null,\n  provider: null,\n  providerChainId: null,\n  loading: false,\n  connectWeb3: () => {},\n});\n\nexport const useWeb3Context = () => useContext(Web3Context);\n\nconst providerOptions: IProviderOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      rpc: {\n        1: getRPCUrl(1),\n        3: getRPCUrl(3),\n        4: getRPCUrl(4),\n        5: getRPCUrl(5),\n        42: getRPCUrl(42),\n      },\n    },\n  },\n};\n\nconst web3Modal =\n  typeof window !== \"undefined\" &&\n  new Web3Modal({\n    cacheProvider: true,\n    providerOptions,\n  });\n\nconst Web3ContextProvider: React.FC = ({ children }) => {\n  const [{ account, providerChainId, provider }, setWeb3State] =\n    useState({\n      account: null,\n      provider: null,\n      providerChainId: null,\n    });\n\n  const [loading, setLoading] = useState(true);\n\n  const setProvider = useCallback(\n    async (\n      prov,\n      initialCall\n    ) => {\n      try {\n        setLoading(true);\n        if (prov) {\n          const provider = new ethers.providers.Web3Provider(\n            new Web3(prov).currentProvider\n          );\n          const chainId = parseInt(prov.chainId, 16);\n          const account = initialCall\n            ? await provider.getSigner().getAddress()\n            : null;\n\n          setWeb3State(webState => ({\n            ...webState,\n            providerChainId: chainId,\n            provider,\n            account: account || webState.account,\n          }));\n        }\n      } catch (err) {\n        console.error(err.message);\n      } finally {\n        setLoading(false);\n      }\n    },\n    []\n  );\n\n  const connectWeb3 = useCallback(async () => {\n    const modalProvider = await web3Modal.connect();\n    await setProvider(modalProvider, true);\n    modalProvider.on(\"chainChanged\", () => setProvider(modalProvider));\n    modalProvider.on(\"accountsChanged\", async (newAcc: string[]) =>\n      setWeb3State(prev => ({ ...prev, account: newAcc[0] }))\n    );\n  }, [setProvider]);\n\n  useEffect(() => {\n    if (window.ethereum) window.ethereum.autoRefreshOnNetworkChange = false;\n    web3Modal.cachedProvider ? connectWeb3() : setLoading(false);\n  }, [connectWeb3]);\n\n  return (\n    <Web3Context.Provider\n      value={{ account, providerChainId, provider, loading, connectWeb3 }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n\nexport default Web3ContextProvider;\n","import React, { useState } from 'react'\nimport {\n  initIPFS, initOrbitDB,  getDB, getAllDatabases,\n} from '../libs/databaseLib'\nimport { actions, useStateValue } from '../state'\nimport {\n  Spinner, HStack, VStack, Box, Text, IconButton,\n} from '@chakra-ui/react'\nimport { CheckCircleIcon, LinkIcon } from '@chakra-ui/icons'\nimport CopyableText from './commons/copyableText'\nimport { useWeb3Context } from '../libs/Web3Context'\n\nconst Systems = () => {\n  const [appState, dispatch] = useStateValue()\n  const [completeUser, setCompleteUser] = useState(false)\n  const { providerChainId, account } = useWeb3Context()\n\n  const fetchDB = async (address, type) => {\n    const db = await getDB(address)\n    if (db) {\n      let entries\n      if (db.type === 'eventlog' || db.type === 'feed') {\n        entries = await (\n          db.iterator({ limit: 5 })\n          .collect()\n          .reverse()\n        )\n      } else if (db.type === 'counter') {\n        entries = [{ payload: { value: db.value } }]\n      } else if (db.type === 'keyvalue') {\n        entries = Object.keys(db.all).map((e) => ({\n          payload: { value: {key: e, value: db.get(e)} }\n        }))\n      } else if (db.type === 'docstore') {\n        entries = db.query((e) => (\n          e !== null, { fullOp: true }).reverse()\n        )\n      } else {\n        entries = [{ payload: { value: 'TODO' } }]\n      }\n      switch (type) {\n        case 'access.manager':\n          dispatch({ type: actions.DBGUIDE.SET_DBGUIDE, db, entries })\n        break\n        case 'ipfsDAG':\n          dispatch({ type: actions.DBDAGTEST.SET_DBDAGTEST, db, entries })\n        break\n        case 'kvTests':\n          dispatch({ type: actions.DBUSERS.SET_DBUSERS, db, entries })\n        break\n        case 'ipfsObject':\n          dispatch({ type: actions.DB.SET_DB, db, entries })\n        break\n        default:\n          console.warn(`Unknown DB Type: '${type}'`)\n        break\n      }\n    }else{\n      console.log(address, ' couldnt be found')\n    }\n  }\n\n  // function copyToClipboard() {\n  //   var copyText = document.querySelector(\"#user\")\n  //   var range = document.createRange()\n  //   range.selectNode(copyText)\n  //   window.getSelection().addRange(range)\n  //   console.log('Copied ',copyText.textContent,' to the clipboard')\n  //   document.execCommand(\"copy\")\n  // }\n\n\n  async function initDatabases(){\n    await fetchDB('/orbitdb/zdpuB2TjWHFxPnxng4EUYX3B6s67EjcfXGf2J6uFZE7PbazCF/ipfsObject', 'ipfsObject')\n    await fetchDB('/orbitdb/zdpuAsWPoMa1tGvB83f8Kw17DzKnw7jQBE5NmfpFzRMJRE6Tk/ipfsDAG', 'ipfsDAG')\n    await fetchDB('/orbitdb/zdpuAwtDbBCfDK7sDpxZn7Jgzj9WxfPgS8STaxWadKtnmTwrk/access.manager', 'access.manager')\n    await fetchDB('/orbitdb/zdpuB1HfZEqMk4Fu2M72Zef7tx3tpFJzcNdsUVCjfng6MtunB/kvTests', 'kvTests')\n  }\n\n  // useEffect(() => {\n  //   fetchDB(address)\n  // }, [dispatch, address]) //fetchDB as callback?\n\n  React.useEffect(() => {\n    (async () => {\n      await (\n        initIPFS().then(async (ipfs) => {\n          dispatch({ type: actions.SYSTEMS.SET_IPFS, ipfsStatus: 'Started'})\n\n          await (\n            initOrbitDB(ipfs).then(async (databases) => {\n              dispatch({ type: actions.SYSTEMS.SET_ORBITDB, orbitdbStatus: 'Started' })\n\n              let publicKey = databases.identity.id\n              dispatch({type: actions.USER.SET_USER, publicKey})\n              await initDatabases()\n              const programs = await getAllDatabases()\n              dispatch({ type: actions.PROGRAMS.SET_PROGRAMS, programs: programs.reverse() })\n              dispatch({ type: actions.PROGRAMS.SET_PROGRAMS_LOADING, loading: false })\n            })\n          )\n        })\n      )\n      })()\n  }, [dispatch])// eslint-disable-line react-hooks/exhaustive-deps\n\n  const SystemElement = (props) => (\n    <HStack fontSize='sm' spacing={1} fontWeight='semibold'>\n      <Text>{props.name}</Text>{''}\n      {props.isLoading ? (\n        <Spinner />\n      ) : (\n        <CheckCircleIcon />\n      )}\n      {props.data && (\n        <Box>\n          {props.func ? (\n            <IconButton\n              colorScheme=\"white\"\n              icon={<LinkIcon />}\n              isDisabled = {props.isLoading}\n              onClick={()=>initDatabases()}>\n            </IconButton>\n          ) : (\n            <Box>\n              {completeUser ? (\n                <CopyableText text={props.data}/> // handle close\n              ) : (\n                <Text onClick={()=>setCompleteUser(!completeUser)}>{props.data.slice(0,7)}...</Text>\n              )}\n            </Box>\n          )}\n        </Box>\n      )}\n    </HStack>\n  )\n\n  return (\n    <Box  w='30%' border='1px solid lightgray'>\n      <VStack  alignItems='left'>\n          <SystemElement\n            name = 'IPFS'\n            isLoading = {appState.ipfsStatus !== 'Started'}\n          />\n          <SystemElement\n            name = 'OrbitDB'\n            isLoading = {appState.orbitdbStatus !== 'Started'}\n          />\n          <SystemElement\n            name = 'User'\n            isLoading = {!appState.user}\n            data = {appState.user}\n          />\n          <SystemElement\n            name = 'Shared DBs'\n            isLoading = {!appState.db}\n            data = 'Refresh'\n            func = {true}\n          />\n          <SystemElement\n            name = 'Web3'\n            isLoading = {!account}\n            data = {providerChainId !== 100 ? (\n              'Connect to xdai'\n            ) : (\n              account\n            )}\n          />\n      </VStack>\n    </Box>\n  )\n}\n\nexport default Systems\n","import React, {useState} from \"react\";\nimport { dagPreparation, getFromIpfs, addIpfs, getIpfs, isCID } from '../libs/databaseLib';\nimport {Button, Center, Stack, Drawer, DrawerBody,DrawerHeader, DrawerOverlay, DrawerContent, Input, HStack,VStack, Divider, IconButton} from '@chakra-ui/react';\nimport CopyableText from './commons/copyableText';\nimport { useDisclosure } from \"@chakra-ui/react\";\nimport {AttachmentIcon} from '@chakra-ui/icons';\n\nfunction IPFSTools(props) {\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const [result, setResult] = useState();\n  const [caseSelected, setCaseSelected] = useState();\n\n  async function SearchIPFS(){\n    let cid = document.getElementById('getFile').value;\n    let result = await getFromIpfs(cid);\n    console.log(result)\n    setResult(result);\n  }\n\n  async function getCidIPFS(){\n    let cid = document.getElementById('getIpfs').value;\n    let result = await getIpfs(cid);\n    let decode;\n    try{\n      decode = new TextDecoder().decode(result)\n    }catch{\n      decode = result.toString()\n    }\n    console.log(decode)\n    setResult(decode);\n  }\n\n\n  async function uploadDag(){\n    let value = document.getElementById('dagData').value.toString();\n    try{\n      let cid = await dagPreparation(JSON.parse(value));\n      setResult(cid.toString())\n      console.log('Now is your responsability to make something cool!')\n    }catch{\n      console.log('Error in JSON.parse! please use a json format')\n      setResult('Error in JSON.parse! please use a json format')\n    }\n  }\n\n  async function addFileIpfs(){\n    const selectedFile = document.getElementById('fileInput').files[0];\n    let cid\n    let reader = new FileReader();\n    reader.readAsText(selectedFile);\n    reader.onloadend = function () {\n        cid = addIpfs(reader.result);\n        setResult(cid.toString());\n      };\n    // if(results.length > 0){\n    //   for await (const { cid } of results) {\n    //     console.log(cid.toString())\n    //   }\n    //   return results;\n    // }else{\n    //   return 'There was a problem'\n    // }\n  }\n\n  async function checkCID(){\n    const cid = document.getElementById('isCID').value.toString();\n    const is = await isCID(cid);\n    setResult(is.toString())\n  }\n\n\n\n  // async function seeBookmarks(){\n  //   const bookmarks = await browser.bookmarks.get()\n  //   console.log(bookmarks)\n  // }\n  const Case = () => {\n\n    switch (caseSelected) {\n      case 'getFromIpfsModal':\n      return (<HStack>\n                <Input id='getIpfs' placeholder='Qm..' w='70%'></Input>\n                <Button onClick={()=>{getCidIPFS()}}>ipfs.get(cid) </Button>\n              </HStack>);\n      case 'getFileIpfsModal':\n      return (\n        <HStack>\n          <Input id='getFile' placeholder='Qm..' w='70%'></Input>\n          <Button onClick={()=>{SearchIPFS()}}>ipfs.cat(cid)</Button>\n        </HStack>\n      )\n      case 'createDag':\n      return (\n        <VStack>\n          <Input id='dagData' placeholder='dag data'></Input>\n          <Button onClick={()=>{uploadDag()}}>ipfs.dag.put(JSON.parse(data))</Button>\n        </VStack>\n      );\n      case 'addIpfsModal':\n      return (\n        <HStack>\n          <IconButton\n            onClick={()=>{document.getElementById('fileInput').click()}}\n            icon={<AttachmentIcon />}\n            variant='outline'\n            colorScheme='white'>\n          </IconButton>\n          <Input\n            hidden\n            type=\"file\"\n            id=\"fileInput\">\n         </Input>\n          <Button onClick={()=>{addFileIpfs()}}>ipfs.add(file)</Button>\n        </HStack>\n\n      );\n      case 'cidModal':\n      return (\n        <HStack>\n          <Input id='isCID' placeholder='cid?' w='70%'></Input>\n          <Button onClick={()=>{checkCID()}}>CID.isCID(cid)</Button>\n        </HStack>\n      );\n      default:\n      return null;\n    }\n  };\n\n  return (\n    <Center>\n      <Button variant=\"outline\" colorScheme=\"white\" onClick={onOpen}>Other tool's</Button>\n\n      <Drawer\n        size='lg'\n        placement=\"right\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent bg='gray'>\n          <DrawerHeader borderBottomWidth=\"1px\" color='lightgray'>IPFS Tools</DrawerHeader>\n          <DrawerBody>\n\n          {/* IPFS various */}\n          <Stack\n          variant=\"outline\"\n          spacing=\"2\"\n          >\n          <Button onClick={()=>setCaseSelected('createDag')}>create DAG</Button>\n          <Button onClick={()=>setCaseSelected('getFromIpfsModal')}>Get ipfs</Button>\n          <Button onClick={()=>setCaseSelected('getFileIpfsModal')}>Get file</Button>\n          <Button onClick={()=>setCaseSelected('addIpfsModal')}>Add file to ipfs</Button>\n          <Button onClick={()=>setCaseSelected('cidModal')}>is CID?</Button>\n          </Stack>\n          <br />\n          <Divider />\n          <br />\n          <Case />\n          <br />\n          <Divider />\n          <br />\n          {result?\n            <CopyableText text={result} />\n            :null}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n\n    </Center>\n  );\n}\n\nexport default IPFSTools;\n","import React from 'react'\nimport {  Button, Wrap,WrapItem, Spacer, HStack } from \"@chakra-ui/react\"\nimport {useHistory} from 'react-router-dom';\nimport Systems from './systems';\nimport {useStateValue } from '../state';\nimport IPFSTools from './ipfsTools';\n\nfunction Header () {\n  // const [] // selected route?\n  const history = useHistory();\n  const [appState] = useStateValue();\n  // const [guide, setGuide]=useState(true);\n  function handleShared(){\n    history.push('sharedDatabases');\n  }\n  function handleLocal(){\n    history.push('/localDatabases');\n  }\n  function handleVis(){\n    history.push('/');\n  }\n\n\n  return (\n    <HStack>\n        <Systems />\n        <Spacer />\n        <Wrap>\n          <WrapItem>\n          <Button variant=\"outline\" colorScheme=\"white\" onClick={handleVis}>Visualization</Button>\n          </WrapItem>\n          <WrapItem>\n          <Button\n            colorScheme=\"white\"\n            variant=\"outline\"\n            onClick={handleShared}\n            isDisabled={!appState.entries.length >0}\n          >Shared Databases</Button>\n          </WrapItem>\n          <WrapItem>\n          <Button\n            variant=\"outline\"\n            colorScheme=\"white\"\n            onClick={handleLocal}\n            isDisabled={!appState.entriesDAGtest.length >0}\n          >Local Databases</Button>\n          </WrapItem>\n          <WrapItem>\n            <IPFSTools />\n          </WrapItem>\n      </Wrap>\n    </HStack>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/raidGuildLogo.73d61afd.png\";","import React, {useEffect} from \"react\";\nimport logo from '../../libs/images/raidGuildLogo.png';\nimport '../../App.css';\n\nconst d3 = require(\"d3\");\n\nfunction Donut(props) {\n\n  const width = 932;\n  const radius = width / 6\n  const format = d3.format(\",d\")\n  const arc = d3.arc()\n  .startAngle(d => d.x0)\n  .endAngle(d => d.x1)\n  .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\n  .padRadius(radius * 1.5)\n  .innerRadius(d => d.y0 * radius)\n  .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1))\n\n  let data;\n\n  const dataOriginal = !props.dataGraphed || props.dataGraphed.children.length === 0;\n  if(dataOriginal) {\n    data = props.data;\n  } else {\n    data = props.dataGraphed;\n  }\n\n  const color = d3.scaleOrdinal(d3.quantize(d3.interpolateRainbow, data.children.length + 1)) // this kills the color palette in ipfs_API\n  const partition = data => {\n    const root = d3.hierarchy(data)\n        .sum(d => d.value)\n        .sort((a, b) => b.value - a.value);\n    return d3.partition()\n        .size([2 * Math.PI, root.height + 1])\n      (root);\n  }\n\n  let chart = () => {\n    const root = partition(data);\n\n    root.each(d => d.current = d);\n\n    const svg = d3\n        .select('#graph')\n        .append('svg')\n        .attr(\"viewBox\", [0, 0, width, width])\n        .style(\"font\", \"10px sans-serif\");\n\n    Object.entries(props.style ?? {}).forEach(([attr, val]) => {\n      svg.style(attr, val)\n    });\n\n    const g = svg.append(\"g\")\n        .attr(\"transform\", `translate(${width / 2},${width / 2})`);\n\n    const div = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip\")\n        .style(\"color\", 'white');\n\n    const path = (\n      g.append(\"g\")\n      .selectAll(\"path\")\n      .data(root.descendants().slice(1))\n      .join(\"path\")\n      .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\n      .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\n      .attr(\"d\", d => arc(d.current))\n      .on('mouseover', (evt, d) => {\n        div.transition()\n        .duration(200)\n        .style(\"opacity\", .9);\n        // div.html(`<span>name: ${evt.target.__data__.data.name}</span><br/><span>url: ${d.target.__data__.data.url}</span><br/><span>description: ${d.target.__data__.data.description}</span>`)\n        // .style(\"right\", \"1px\")\n        // .style(\"top\",  \"1px\");\n      })\n      .on(\"mouseout\", function(d) {\n        div.transition()\n        .duration(500)\n        .style(\"opacity\", 0)\n      })\n    );\n\n    path.style('cursor', d => (\n      Boolean(d.children) ? 'crosshair' : 'pointer'\n    ))\n    .on('click', clicked)\n\n    path.append(\"title\")\n        .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"/\")}\\n${format(d.value)}`);\n\n    const label = (\n      g.append(\"g\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"text-anchor\", \"middle\")\n        .style(\"user-select\", \"none\")\n      .selectAll(\"text\")\n      .data(root.descendants().slice(1))\n      .join(\"text\")\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"fill-opacity\", d => +labelVisible(d.current))\n        .attr(\"transform\", d => labelTransform(d.current))\n        .style('fill', 'white')\n        .text(d => d.data.name)\n        .style('cursor', d => (\n          Boolean(d.children) ? 'crosshair' : 'pointer'\n        ))\n        .on('click', clicked)\n        .on('mouseover', (evt) => {\n          d3.select(evt.target)\n          .transition()\n          .duration(100)\n          .style('font-size', '20px');\n        })\n        .on('mouseout', (evt) => {\n          d3.select(evt.target)\n          .transition()\n          .duration(100)\n          .style('font-size', '10px');\n        })\n    );\n\n    const parent = g.append(\"image\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"click\", clicked)\n          .attr(\"xlink:href\",logo)\n          .attr(\"width\", 160)\n          .attr(\"height\", 160)\n          .attr('x',-80)\n          .attr('y',-80)\n\n    function clicked(event, p) {\n      const { data: { url } } = p;\n      if(url) {\n        return window.open(url, '_blank').focus();\n      }\n      if(!p) return;\n      parent.datum(p.parent || root);\n      root.each(d => d.target = {\n        x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n        x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n        y0: Math.max(0, d.y0 - p.depth),\n        y1: Math.max(0, d.y1 - p.depth)\n      });\n\n      const t = g.transition().duration(350);\n\n      path.transition(t)\n          .tween(\"data\", d => {\n            const i = d3.interpolate(d.current, d.target);\n            return t => d.current = i(t);\n          })\n        .filter(function(d) {\n          return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\n        })\n          .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\n          .attrTween(\"d\", d => () => arc(d.current));\n\n      label.filter(function(d) {\n          return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\n        }).transition(t)\n          .attr(\"fill-opacity\", d => +labelVisible(d.target))\n          .attrTween(\"transform\", d => () => labelTransform(d.current));\n    }\n\n    function arcVisible(d) {\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\n    }\n\n    function labelVisible(d) {\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\n    }\n\n    function labelTransform(d) {\n      const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\n      const y = (d.y0 + d.y1) / 2 * radius;\n      return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n    }\n      return svg.node();\n  }\n\n  useEffect(() => {\n    d3.select(\"#graph\").select('svg').remove();\n    chart(); //useRef()?\n  },[props.dataGraphed, props.data]);// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n\n        <div\n          id=\"graph\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"5vh auto\",\n          }}\n        >\n      </div>\n    </div>\n  );\n}\n\nexport default Donut;\n","import React, {useEffect} from \"react\";\nimport '../../App.css';\n\nconst d3 = require(\"d3\");\n\nfunction CollapsibleTree(props) {\n\n  const width = 700;\n  let data;\n  const dataOriginal = !props.dataGraphed || props.dataGraphed.children.length === 0;\n  if(dataOriginal) {\n    data = props.data;\n  } else {\n    data = props.dataGraphed;\n  }\n\n\n  const chart = () => {\n    const dx = 10\n    const dy = width/6\n    const margin = ({top: 10, right: 60, bottom: 10, left: 60})\n    const diagonal = d3.linkHorizontal().x(d => d.y).y(d => d.x)\n    const tree = d3.tree().nodeSize([dx, dy])\n    const root = d3.hierarchy(data);\n\n    root.x0 = dy / 2;\n    root.y0 = 0;\n    root.descendants().forEach((d, i) => {\n      d.id = i;\n      d._children = d.children;\n      if (d.depth && d.data.name.length !== 7 && !props.dataGraphed) d.children = null;\n    });\n\n    const svg = d3.select(\"#graph\")\n        .append('svg')\n        .attr(\"viewBox\", [-margin.left, -margin.top, width, dx])\n        .style(\"font\", \"10px sans-serif\")\n        .style(\"user-select\", \"none\");\n\n    Object.entries(props.style ?? {}).forEach(([attr, val]) => {\n      svg.style(attr, val)\n    });\n\n    const gLink = svg.append(\"g\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#555\")\n        .attr(\"stroke-opacity\", 0.4)\n        .attr(\"stroke-width\", 1.5);\n\n    const gNode = svg.append(\"g\")\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"pointer-events\", \"all\");\n\n\n    function update(source) {\n      const duration = d3.event && d3.event.altKey ? 2500 : 250;\n      const nodes = root.descendants().reverse();\n      const links = root.links();\n\n      // Compute the new tree layout.\n      tree(root);\n\n      let left = root;\n      let right = root;\n      root.eachBefore(node => {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n      });\n\n      const height = right.x - left.x + margin.top + margin.bottom;\n\n      const transition = svg.transition()\n          .duration(duration)\n          .attr(\"viewBox\", [-margin.left, left.x - margin.top, width, height])\n          .tween(\"resize\", window.ResizeObserver ? null : () => () => svg.dispatch(\"toggle\"));\n\n      // Update the nodes…\n      const node = gNode.selectAll(\"g\")\n        .data(nodes, d => d.id);\n\n\n      function goto(url){\n        console.log(url)\n        // const url = p.data.url;\n        if(url) window.open(url, '_blank').focus();\n      }\n\n\n      // Enter any new nodes at the parent's previous position.\n      const nodeEnter = node.enter().append(\"g\")\n          .attr(\"transform\", d => `translate(${source.y0},${source.x0})`)\n          .attr(\"fill-opacity\", 0)\n          .attr(\"stroke-opacity\", 0)\n          .on(\"click\", (event, d) => {\n            if(d._children){\n              d.children = d.children ? null : d._children;\n              update(d);\n            }else{\n              goto(d.data.url)\n            }\n          });\n\n      nodeEnter.append(\"circle\")\n          .attr(\"r\", 2.5)\n          .attr(\"fill\", d => d._children ? \"#ff5733\" : \"#999\")\n          .attr(\"stroke-width\", 10);\n\n      nodeEnter.append(\"text\")\n          .attr(\"dy\", \"0.31em\")\n          .attr(\"x\", d => d._children ? -6 : 6)\n          .attr(\"text-anchor\", d => d._children ? \"end\" : \"start\")\n          .text(d => d.data.name)\n          .on(\"mouseover\", function (d) {\n            // console.log(d.target)\n            d3.select(d.target).style(\"fill\", \"blue\");\n          })\n          .on(\"mouseout\", function (d) {\n            if(d.target._children){\n              d3.select(d.target).style(\"fill\", \"#ff5733\");\n            }else{\n              d3.select(d.target).style(\"fill\", \"black\");\n            }\n          })\n        .clone(true).lower()\n          .attr(\"stroke-linejoin\", \"round\")\n          .attr(\"stroke-width\", 3)\n          .attr(\"stroke\", \"white\");\n\n      // Transition nodes to their new position.\n      node.merge(nodeEnter).transition(transition)\n          .attr(\"transform\", d => `translate(${d.y},${d.x})`)\n          .attr(\"fill-opacity\", 1)\n          .attr(\"stroke-opacity\", 1);\n\n      // Transition exiting nodes to the parent's new position.\n      node.exit().transition(transition).remove()\n          .attr(\"transform\", d => `translate(${source.y},${source.x})`)\n          .attr(\"fill-opacity\", 0)\n          .attr(\"stroke-opacity\", 0);\n\n      // Update the links…\n      const link = gLink.selectAll(\"path\")\n        .data(links, d => d.target.id);\n\n      // Enter any new links at the parent's previous position.\n      const linkEnter = link.enter().append(\"path\")\n          .attr(\"d\", d => {\n            const o = {x: source.x0, y: source.y0};\n            return diagonal({source: o, target: o});\n          });\n\n      // Transition links to their new position.\n      link.merge(linkEnter).transition(transition)\n          .attr(\"d\", diagonal);\n\n      // Transition exiting nodes to the parent's new position.\n      link.exit().transition(transition).remove()\n          .attr(\"d\", d => {\n            const o = {x: source.x, y: source.y};\n            return diagonal({source: o, target: o});\n          });\n\n      // Stash the old positions for transition.\n      root.eachBefore(d => {\n        d.x0 = d.x;\n        d.y0 = d.y;\n      });\n    }\n\n    update(root);\n    return svg.node();\n  }\n\n  useEffect(() => {\n    d3.selectAll(\"#graph\").select('svg').remove();\n    chart(); //useRef()?\n  },[props.dataGraphed, props.data]);// eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <br />\n\n      <div\n        id=\"graph\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          margin: \"5vh auto\",\n        }}\n      >\n      </div>\n    </div>\n  );\n}\n\nexport default CollapsibleTree;\n","  import React, {useState, useEffect} from \"react\";\nimport Donut from \"./D3Graphs/donut\";\nimport CollapsibleTree from \"./D3Graphs/collapsibleTree\";\nimport {getDagObject} from '../libs/databaseLib'; //, getTreeIpfs\nimport {useStateValue } from '../state';\nimport { Select, HStack, Input, InputGroup,InputLeftElement } from \"@chakra-ui/react\";\nimport {Search2Icon} from '@chakra-ui/icons';\n\nconst protocolsData = require(\"../libs/modelsObjects/eth-ecosystem\");\nfunction Filters(props) {\n  const [appState] = useStateValue();\n  // const [selection, setSelection] = useState();\n  const [data, setData] = useState(protocolsData);\n  const [search, setSearch] = useState();\n  const [results, setResults] = useState([]);\n  const [dataGraphed, setDataGraphed] = useState();\n  const [vis,setVis] = useState('sunburst');\n\n  const dataCid = async (cid) => {return getDagObject(cid)}\n\n  async function getLatestDB(type){ // this should handle different DBs\n    let entries;\n    let cid;\n    let dagObj;\n    let result;\n    switch (type) {\n      case 'ipfsDag':\n        let children = []\n        entries = appState.entriesDAGtest[0]\n        // console.log('entries',entries)\n        // first CID : gets the cid of value\n        cid = await getDagObject(entries.payload.value.value)\n        console.log('cid',cid)\n        // Then gets the object of that cid\n        dagObj = await getDagObject(cid.value)\n        // supposedly a json object\n        const dagObject = JSON.parse(dagObj.value) // objects has been stringified because of error on loading (?)\n        console.log('dagObj',dagObject)\n\n        // with different categories\n        // let dagTree = await getTreeIpfs(cid.value)\n        // console.log('obj tree', dagTree)\n        for(let branch in dagObject){\n          if(branch !== 'name'){ // ignore the name (and other metadata) to retrieve the sub objects\n            // console.log('branch',branch)\n            // we retrieve the object inside each category\n            // console.log(dagObject[branch]) // i need to differentiate Qm.. from v1 CID's\n            let obj = await getDagObject(dagObject[branch])\n            // console.log('obj',obj)\n\n            if(obj){\n              children.push(obj)\n            }else{\n              // error in strucure.. show what's missing\n              // obj = await getV0(dagObject[branch]);\n              console.log(obj)\n            }\n          }\n        }\n\n\n        result = {name:dagObj.name,children:children}\n        break;\n      case 'ipfsObject':\n        entries = appState.entries[0] // [0] is the last log\n        cid = await dataCid(entries.payload.value.value)\n        dagObj = await dataCid(cid.value)\n        // console.log('dagOb', dagObj)\n        result = dagObj\n\n        break;\n      default:\n          return\n    }\n    // console.log(entries)\n    setData(result)\n    return result;\n\n    // if(!entries){ // and so entries wouldn't be the only choice\n    //   return\n    // }\n    // As Object\n    // As DAG (data in a CID inside the DB CID)\n    // let dagC = (await  getDagCid(dataCid2.value.value)).value\n    // console.log('Cid retrieval: ',dagC)\n  }\n\n// const current = (await ipfs.dag.get(cid)).value // to get internal searches of cid's\n\n\n  function exploreTree(arr, term, matches){\n    arr.forEach(function(i) {\n        if (i.name.toLowerCase().includes(term.toLowerCase())) {\n            matches.push(i);\n        } else {\n            let childResults = findResults(i.children, term);//\n            if (childResults.length)\n                matches.push(Object.assign({}, i, { children: childResults }));\n        }\n    })\n  }\n\n  function findResults(arr,term){\n    let matches = [];\n    if (!Array.isArray(arr)) return matches;\n    if (term === '') return arr;\n    exploreTree(arr, term, matches);\n    setResults(matches);\n    if(matches !== results){\n      setDataGraphed(treeSearch(matches))\n      }\n    return matches;\n  }\n\n  function clearResults(){\n    setDataGraphed('')\n    setResults([]);\n  }\n\n  useEffect(()=>{ // Search bar effect\n      if(search !== '' && search !== undefined && search.length > 2){\n        findResults(data.children, search)\n      }else{\n        clearResults();\n      }\n  },[search]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n  // function getFlat({ name, children = [] }) { // get all names in a tree obj\n  //   return [name].concat(...children.map(getFlat));\n  // }\n  // function hasChildren(node) {\n    //   return (typeof node === 'object')\n    //       && (typeof node.children !== 'undefined')\n    //       && (node.children.length > 0);\n    // }\n  const treeSearch = (res) => {return {name:\"ethereum\", children:res}};\n\n  const handleDatabase = (type) =>{\n    if(type === 'local'){\n      setData(protocolsData)\n    }else{\n      getLatestDB(type)\n    }\n  }\n\n  return (\n      <div\n        id=\"filters\"\n        style={{\n          justifyContent: \"left\",\n          alignItems: \"left\",\n        }}\n\n      >\n\n      <HStack>\n        <Select w='25%' placeholder=\"Database selector\" onChange={(e)=>handleDatabase(e.target.value)} >\n          <option value=\"local\">Local (hardcoded)</option>\n          <option disabled={!appState.entries.length >0} value=\"ipfsObject\">IPFS Object</option>\n          <option disabled={!appState.entriesDAGtest.length >0} value=\"ipfsDag\">IPFS DAG</option>\n        </Select>\n\n        <Select w='25%' placeholder=\"Graph type\" onChange={(e)=>setVis(e.target.value)} >\n          <option value=\"sunburst\" default>Donut</option>\n          <option value=\"collapsibleTree\">Tree</option>\n        </Select>\n\n      <InputGroup >\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<Search2Icon color=\"gray.300\" />}\n          />\n          <Input type=\"tel\" placeholder=\"Search\"\n            onChange={(e)=>setSearch(e.target.value)}\n          />\n      </InputGroup>\n      </HStack>\n\n      {vis === 'sunburst'?\n        <Donut\n        data = {data}\n        dataGraphed = {dataGraphed}\n        />\n      :null}\n      {vis === 'collapsibleTree'?\n        <CollapsibleTree\n        data = {data}\n        dataGraphed = {dataGraphed}\n        />\n      :null}\n\n      </div>\n\n  );\n}\n\nexport default Filters;\n","import React, {useState} from 'react'\nimport {\n  Button, Input, VStack, Table, TableCaption, Box,\n  Thead, Tbody, Th, Tr, Td, IconButton, Divider,\n} from '@chakra-ui/react'\nimport { DeleteIcon } from '@chakra-ui/icons'\n\nconst FieldsTable = (\n  ({ fields, deleteItem, ...props }) => (\n    <Table {...props}>\n      <TableCaption placement=\"top\">data</TableCaption>\n      <Thead>\n        <Tr>\n          <Th>Key</Th>\n          <Th>Value</Th>\n          <Th>Functions</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {fields.map(({ key, value }, idx) => (\n          <Tr key={idx}>\n            <Td>{key}</Td>\n            <Td>{value}</Td>\n            <Td>\n              <IconButton\n                colorScheme='white'\n                icon={<DeleteIcon/>}\n                onClick={() => deleteItem(key)}\n              />\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  )\n)\n\nconst ObjectCreator = (props) => {\n  const [fields, setFields] = useState([])\n\n  const deleteItem = (e) => {\n    let fieldsCurrent = [...fields]\n    const index = fields.indexOf(\n      fields.find((x) => x.key === e)\n    )\n    if (index > -1) {\n      fieldsCurrent.splice(index, 1)\n      setFields(fieldsCurrent)\n      console.log('Removed', e)\n    }\n  }\n\n  const nameProject = () => {\n    const { value: name } = document.getElementById('name');\n    const obj = { key: 'name', value: name }\n    setFields((fields) => (\n      [...fields, obj]\n    ))\n  }\n\n  function addItem() {\n    let { value: key } = document.getElementById('key');\n    let { value } = document.getElementById('value');\n    const obj = { key, value }\n    setFields((fields) => (\n      [...fields, obj]\n    ))\n    document.getElementById('key').value = '';\n    document.getElementById('value').value = '';\n  }\n\n  async function createObject() {\n    const result = Object.fromEntries(fields.map(k => [k[\"key\"], k[\"value\"]]))\n    console.log(JSON.stringify(result))\n    await props.createEntry(result['name'],JSON.stringify(result))\n  }\n\n  return (\n    <Box>\n      <hr className=\"solid\"/>\n      <Box>\n        <Box>\n          {fields.length > 0 ? (\n            <Box>\n              <FieldsTable {...{ fields, deleteItem }}/>\n              <VStack>\n                <Input\n                  w='90%' colorScheme='white' variant='outline'\n                  id='key' placeholder='Classificator'\n                />\n                <Input\n                  w='90%' colorScheme='white' variant='outline'\n                  id='value' placeholder='value'\n                />\n                <Button\n                  colorScheme='white' variant='outline'\n                  onClick={addItem}\n                >\n                  Add Property\n                </Button>\n                <Divider />\n                <Button\n                  colorScheme='white' variant='outline'\n                  onClick={createObject}\n                >\n                  Finish Object\n                </Button>\n              </VStack>\n              <Input\n                type='checkbox' value={props.wrap} checked={props.wrap}\n                onChange={() => props.setWrap(w => !w)}\n              />\n              Wrap value in a DAG\n              <br/>\n              <Button onClick={createObject}>Finish Object</Button>\n            </Box>\n          ) : (\n            <Box>\n              <VStack>\n                <Input w='80%' variant='outline' colorScheme='white' id='name' placeholder='name'></Input>\n                <Button variant='outline' colorScheme='white' onClick={()=>nameProject()}>Name the project</Button>\n              </VStack>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default ObjectCreator;\n","import React, {useState} from \"react\";\nimport { dagPreparation } from '../libs/databaseLib';\nimport ObjectCreator from './objectCreation';\nimport {Button, ButtonGroup, Input, VStack, Checkbox, IconButton} from '@chakra-ui/react';\nimport {AttachmentIcon} from '@chakra-ui/icons';\nimport {useWeb3Context} from '../libs/Web3Context';\nfunction DBTools(props) {\n  const [wrap, setWrap] = useState(true);\n  const {account} = useWeb3Context();\n  const [includeWeb3Account, setIncludeWeb3Account] = useState(false);\n  const[caseSelected, setCaseSelected] = useState();\n  // converge all input functions! manage different databases and inputs\n  async function createEntry(key, value){\n    // if (event) event.preventDefault()\n    // if (value.length === 0) return\n    let db = props.db;\n    if(!value){\n      value = document.getElementById('value').value;\n    }\n    if(!key){\n      key = document.getElementById('key').value\n    }\n    if (db.type === 'eventlog') {\n      let valueW;\n      if (wrap){\n        let wrappedCid = await dagPreparation({value:value})\n        valueW = wrappedCid.toString();\n        console.log('wrappedCid', valueW)\n      }else{\n        valueW = value;\n      }\n        //  Metadata of the log\n      let timestamp = new Date();\n      let obj;\n      if(includeWeb3Account){\n        obj = {value:valueW,  timestamp:timestamp, account:account}\n      }else{\n        obj = {value:valueW,  timestamp:timestamp}\n      }\n    // all is wrapped in a DAG\n      let ipfsCid = await dagPreparation(obj)\n      console.log(ipfsCid.toString())\n      await db.add({key:key,value:ipfsCid.string})\n    }else if(db.type === 'keyvalue'){\n      if(includeWeb3Account){\n        await db.set(key, {value:value, account:account})\n      }else{\n        await db.set(key,{value:value})\n      }\n    }else if(db.type === 'docstore'){\n      await db.put({_id:key, value:value});\n    }else if(db.type === 'counter'){\n      let fl\n      try{\n        fl = parseFloat(value)\n      }catch{\n        console.log('Please insert a number!')\n        return\n      }\n      await db.inc(fl);\n    }\n    else{\n      throw new Error('There was an error!')\n    }\n    // const allEntries = await db.iterator({ limit: 5 }).collect().reverse(); // iterator doesnt work for everyone\n    // props.setEntries(allEntries);\n    console.log('Saved!')\n    setCaseSelected()\n  }\n\n\n  async function wrapAndLog(obj){\n    // const db = props.db\n    let key = document.getElementById('key').value\n    let cid = await dagPreparation(obj)\n    console.log('cid obj',cid.toString())\n    createEntry(key, cid.toString())\n    return cid;\n  }\n\n  async function giveAccess(){\n    const address = document.getElementById('accessAddress').value\n    console.log('give access to ',address)\n    try{\n      await props.db.access.grant('_write', address) // grant access to database2\n    }catch{\n      return 'Error in giving the access'\n    }\n    console.log('Access granted!')\n  }\n\n  async function uploadFileDB(){\n    const selectedFile = document.getElementById('fileInput').files[0];\n    let obj\n    const extension = selectedFile.name.split('.').pop().toLowerCase();\n    let reader = new FileReader();\n    reader.readAsText(selectedFile);\n    reader.onloadend = function () {\n        console.log('Readed!', reader.readyState); // readyState will be 2\n        if(extension === 'json'){\n          obj = JSON.parse(reader.result);\n        }else{\n          obj = reader.result;\n        }\n        wrapAndLog(obj);\n      };\n    }\n\n    function handleSelection(selection){\n      if(selection === caseSelected){\n        setCaseSelected()\n      }else{\n        setCaseSelected(selection)\n      }\n    }\n\n\n    const Case = () => {\n\n      switch (caseSelected) {\n        case 'AddToDB':\n        return (\n          <VStack>\n          {(props.db._type === 'keyvalue' || props.db._type === 'eventlog')?\n            <div>\n              <Input  id='key' placeholder='key'></Input><br />\n              <Input  id='value' placeholder='value'></Input><br />\n            </div>\n          :null}\n          {props.db._type === 'counter'?\n            <Input id='value' type='number' placeholder='number' w='20%'></Input>\n          :null}\n\n          {props.db._type === 'docstore'?\n            <div>\n              <Input id='key' placeholder='id'></Input>\n              <Input id='value' placeholder='value'></Input><br />\n{/*\n              <Input disabled id='query' placeholder='id(?)'></Input>\n              <button disabled onClick={()=>console.log('TODO! (needs input)')}>query</button>\n              */}\n            </div>\n          :null}\n\n          <Button\n            colorScheme=\"white\" variant=\"outline\"\n            w='25%'\n            onClick={()=>{createEntry()}}>Add!\n          </Button>\n\n          </VStack>\n        );\n        case 'UploadFile':\n        return (\n          <VStack>\n            <Input id='key' placeholder='key'></Input>\n            <IconButton\n              onClick={()=>{document.getElementById('fileInput').click()}}\n              icon={<AttachmentIcon />}\n              variant='outline'\n              aria-label = 'Add a file'\n              colorScheme='white'>\n            </IconButton>\n            <Input\n              hidden\n              type=\"file\"\n              id=\"fileInput\">\n           </Input>\n\n           {/*accept=\".json\"*/}\n           <div>\n            <Button variant='outline' colorScheme='white' onClick={()=>uploadFileDB()}>Upload!</Button>\n          </div>\n          </VStack>\n\n        );\n        case 'ObjectForm':\n        return (\n          <ObjectCreator\n             createEntry = {createEntry}\n             wrap = {wrap}\n             setWrap = {setWrap}\n          />\n\n        );\n        case 'GrantAccess':\n        return (\n          <VStack>\n            <Input id='accessAddress' placeholder='orbit-db identity (User)'></Input>\n            <Button\n              onClick={()=>giveAccess()}\n              variant='outline'\n              aria-label = 'give access'\n              colorScheme='white'>grant access!\n            </Button>\n         </VStack>\n        );\n\n        default:\n        return null;\n      }\n    };\n\n\n  return (\n    <div>\n      <ButtonGroup variant=\"outline\" >\n        <Button colorScheme=\"white\" disabled={!props.canWrite} onClick={()=>handleSelection('AddToDB')}>Add to DB</Button>\n        <Button colorScheme=\"white\" disabled={!props.canWrite || props.db._type !== 'eventlog'} onClick={()=>handleSelection('UploadFile')}>Upload an object</Button>\n        <Button colorScheme=\"white\" disabled={!props.canWrite} onClick={()=>handleSelection('ObjectForm')}>Create an object</Button>\n        <Button colorScheme=\"white\" disabled={!props.canWrite} onClick={()=>handleSelection('GrantAccess')}>Give access</Button>\n      </ButtonGroup>\n      <VStack>\n        <Case />\n        {caseSelected && caseSelected !=='GrantAccess'?\n          <VStack>\n            <Checkbox variant='outline' colorScheme='white' type='checkbox' value={wrap} isChecked={wrap} onChange={()=>setWrap(!wrap)}>Wrap value in a DAG</Checkbox>\n            <Checkbox variant='outline' colorScheme='white' type='checkbox' value={includeWeb3Account} isChecked={includeWeb3Account} onChange={()=>setIncludeWeb3Account(!includeWeb3Account)}>Include web3 account</Checkbox>\n          </VStack>\n          :null}\n      </VStack>\n    </div>\n  );\n}\n\nexport default DBTools;\n","import React, {useState} from \"react\";\nimport DBTools from './databaseTools';\nimport CopyableText from './commons/copyableText';\nimport { HStack, Stat, StatLabel, StatHelpText, Center, IconButton, Select, Table, TableCaption, Thead,Tbody, Th,Tr,Td } from \"@chakra-ui/react\"\nimport {Search2Icon, ExternalLinkIcon } from '@chakra-ui/icons'\n\nimport {getDagCid, getDagObject, getTreeIpfs, ipldExplorer} from '../libs/databaseLib';\n// import {fetchDB} from './systems';\n\nfunction DBCard(props) {\n  const [tip, setTip] = useState('');\n  const [methodSelector, setMethodSelector] = useState();\n  const canWrite = (db) => {\n    try{\n      return db.access._write.includes(props.user) || db.access._write[0] ==='*'\n    }catch{\n      return true\n    }\n  };\n  const type = props.db._type\n\n// continue debugging databaseTools for usage of DBs\n  async function retrieve(type, cid, path){\n      let mod = ''\n      let text = ''\n      let data\n      switch (type){\n        case 'get':\n          data = props.db.get(cid)\n          text = 'database get (db.get(key)) gives you: (check console)  '\n          break\n        case 'dag':\n            data = await getDagCid(cid)\n            text = 'ipfs.dag.get(cid, {path}) gives you: (check console) '\n            break\n        case 'dagCat':\n            data = await getDagObject(cid)\n            text = 'ipfs.cat(cid) gives you: (check console) '\n            break\n        case 'tree':\n            data = await getTreeIpfs(cid)\n            text = 'ipfs.dag.tree(cid, {path}) gives you: (check console) '\n            break\n        default:\n          data = 'Error'\n          text = 'Error'\n          break\n\n      }\n      console.log(data)\n      mod = (\n        <div>\n          <p> Tip: <br />{text}\n        {/*  <p> {data.payload.value.value}</p>*/}\n          </p>\n        </div>\n      )\n      setTip(mod);\n  }\n\n  return (\n    <Center>\n      {props.db?\n        <div>\n        <Stat>\n          <StatLabel><CopyableText text={props.db.id}/></StatLabel>\n          <StatHelpText>type: {type}</StatHelpText>\n          {props.db.access._write?\n            <StatHelpText>access: {props.db.access._write[0] ==='*' ? 'public' : props.db.access._write[0].slice(0,5)}..</StatHelpText>\n            :null}\n          <StatHelpText>Can i write: {canWrite(props.db) ? 'Yes!':'No!'}</StatHelpText>\n        </Stat>\n\n        <DBTools\n          db = {props.db}\n          canWrite = {canWrite(props.db)}\n        />\n\n          {(props?.entries?.length > 0)?\n            <Table variant=\"simple\">\n              <TableCaption>Latest {props.entries.length > 5 ? 5 : props.entries.length} events</TableCaption>\n              <Thead>\n                <Tr>\n                  <Th>Key</Th>\n                  <Th>Value</Th>\n                  {type === 'eventlog'?\n                  <Th>Functions</Th>\n                  :null}\n                </Tr>\n              </Thead>\n              <Tbody>\n              {props.entries.map((x, item)=>\n                {return (\n                <Tr>\n                  <Td>{x.payload.value.key}</Td>\n                  {type === 'keyvalue'?\n                  <Td>{x.payload.value.value.value}</Td>\n                  :\n\n                  <Td>{x.payload?.value?.value? x.payload.value.value.slice(0,4) : 'loading'}</Td>\n                }\n                {type==='eventlog'?\n                <Td>\n                <HStack>\n                <IconButton\n                colorScheme=\"white\"\n                aria-label=\"Search entry\"\n                icon={<ExternalLinkIcon />}\n                onClick={()=>ipldExplorer(x.payload.value.value)}\n                />\n                {/*Select and button should be same component*/}\n                <Select placeholder=\"Method\" onChange={(e)=>setMethodSelector(e.target.value)} value={methodSelector}>\n                <option value=\"dagCat\">CAT</option>\n                <option value=\"dag\">DAG.GET</option>\n                <option value=\"tree\">Tree</option>\n                </Select>\n\n                <IconButton\n                isDisabled={methodSelector===null}\n                colorScheme=\"white\"\n                aria-label=\"Search entry\"\n                icon={<Search2Icon />}\n                onClick={(e)=>retrieve(methodSelector, x.payload.value.value)}\n                />\n                </HStack>\n                </Td>\n                :null}\n                </Tr>\n              )})}\n              </Tbody>\n            </Table>\n\n          :'Database empty, or not synched.. wait till replicates'}\n          {tip !== ''? tip : null}\n        </div>\n        : null\n      }\n        <hr className=\"solid\"/>\n\n    </Center>\n\n  );\n}\n\nexport default DBCard;\n","import React, {useState} from \"react\";\nimport {useStateValue } from '../state';\nimport DBCard from './databaseCard';\nimport { Spinner, Center, Select } from \"@chakra-ui/react\"\n\nfunction DatabaseForm(props) {\n  const [appState] = useStateValue();\n  const [loading, setLoading] = useState(false);\n  const [showDatabase, setShowDatabase] = useState();\n  const databasesData = [{name:'ipfsObject', db:appState.db, entries:appState.entries}\n  ,{name:'ipfsDag',db:appState.dbDAGtest,entries:appState.entriesDAGtest},\n  {name:'Guide',db:appState.dbGuide,entries:appState.entriesGuide},\n  {name:'kvTests',db:appState.dbUsers,entries:appState.entriesUser}]\n\n  const chosenDB = (name)=>{return databasesData.find(x=>x.name === name)}\n  return (\n      <Center>\n        {loading?\n          <div>\n            <Spinner />\n            <p>Loading.. (data not replicated!)</p>\n          </div>\n          :null}\n\n          <div>\n          <Select placeholder=\"Database\" onChange={(e)=>setShowDatabase(e.target.value)}>\n            <option value=\"ipfsObject\" disabled={!appState.entries.length >0}>IPFS Object</option>\n            <option disabled={!appState.entriesDAGtest.length >0} value=\"ipfsDag\">IPFS DAG</option>\n            <option disabled={!appState.entriesGuide.length >0} value=\"Guide\">Guide</option>\n            <option disabled={!appState.entriesUsers.length >0} value=\"kvTests\">KvTests</option>\n          </Select>\n\n          {showDatabase?\n            <DBCard\n              name = {showDatabase}\n              db = {chosenDB(showDatabase).db}\n              entries = {chosenDB(showDatabase).entries}\n              user = {appState.user}\n              setLoading = {setLoading}\n            />\n            :null}\n\n        </div>\n      </Center>\n\n  );\n}\n\nexport default DatabaseForm\n","import React, {useState, useEffect} from \"react\";\nimport {getDB, ipldExplorer} from \"../libs/databaseLib\";\nimport DBTools from './databaseTools';\nimport CopyableText from './commons/copyableText';\nimport {Spinner, Center, Table, TableCaption, Thead, Tbody, Tr,Th,Td, IconButton, Text, Link, VStack } from '@chakra-ui/react'\nimport {Search2Icon} from '@chakra-ui/icons';\nimport '../App.css'\n\nfunction EditModal(props) {\n  const [loading, setLoading] = useState(false);\n  const [db, setDb] = useState(null);\n  const [entries, setEntries] = useState([]);\n  const canWrite = (db) => {\n    try{\n      return db.access._write.includes(props.user) || db.access._write[0] ==='*'\n    }catch{\n      return true\n    }\n  };\n\n  useEffect(async ()=>{ // eslint-disable-line react-hooks/exhaustive-deps\n      setLoading(true);\n      async function fetchDB(address){\n        const db = await getDB(address)\n\n        if (db) {\n          let entry\n          if (db.type === 'eventlog' || db.type === 'feed')\n          entry = await db.iterator({ limit: 10 }).collect().reverse()\n          else if (db.type === 'counter')\n          entry = [{ payload: { value: db.value } }]\n          else if (db.type === 'keyvalue')\n          entry = Object.keys(db.all).map(e => ({ payload: { value: {key: e, value: db.get(e)} } }))\n          else if (db.type === 'docstore')\n          entry = db.query(e => e !== null, {fullOp: true}).reverse()\n          else\n          entry = [{ payload: { value: \"TODO\" } }]\n\n          setDb(db)\n          setEntries([...entry])\n          setLoading(false);\n        }\n      }\n    fetchDB(props.address)\n  },[props.address, setDb, setEntries])\n\n\n  return (\n      <Center>\n      {db?\n        <div>\n        {loading? <Spinner />:\n        <div>\n        <DBTools\n          db = {db}\n          canWrite = {canWrite(db)}\n          setEntries = {setEntries}\n        />\n        <CopyableText text={props.address} />\n          {entries && entries.length > 0?\n            <VStack>\n            <Table size='sm'>\n              <TableCaption placement='top' style={{color:'white', fontWeight:'bold'}}>\n                <Text>Can i write: {canWrite(db)?'yes':'no'}</Text>\n              </TableCaption>\n              <Thead>\n                <Tr>\n                  {db._type === 'eventlog'?\n                  <Th>functions</Th>\n                  :null}\n                  {db._type !== 'counter'?\n                  <Th>key</Th>\n                  :null}\n                  <Th>value</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n            {entries.map((x, item)=>{return (\n              <Tr key={item}>\n              {db._type === 'eventlog'?\n              <Td>\n                <IconButton\n                  colorScheme=\"white\"\n                  aria-label=\"Search entry\"\n                  onClick={()=>ipldExplorer(x.payload.value.value)}\n                  icon={<Search2Icon />}\n                />\n              </Td>\n              :null}\n              {db._type !== 'counter'?\n                <Td>\n                  <p>{x.payload.value.key}</p>\n\n                  {db._type === 'docstore'?\n                  <p>{x.payload.value._id}</p>\n                  :null}\n                </Td>\n                :null}\n\n                {db._type === 'keyvalue'?\n                  <Td>{x.payload.value.value.value?x.payload.value.value.value:x.payload.value.value}</Td>\n                :null}\n                {(db._type === 'eventlog' || db._type === 'docstore')?\n                  <Td>{x.payload.value.value}</Td>\n                :null}\n                {db._type === 'counter'?\n                  <Td>{x.payload.value}</Td>\n                :null}\n              </Tr>\n            )})}\n          </Tbody>\n          </Table>\n          </VStack>\n          :\n          <Center>\n          <Text>no entries or DB not synched..  <Link href='https://www.youtube.com/watch?v=MkoeqtKUUe4' target='_blank' rel='noreferrer' style={{color:'white'}}>listen meanwhile</Link><\n          /Text>\n          </Center>}\n        </div>\n        }\n      </div>\n      :'There are no entries in this database, make the first!'}\n    </Center>\n\n\n  );\n}\nexport default EditModal;\n","import React, { useState } from 'react'\nimport {\n  createDatabase, getAllDatabases,\n} from '../libs/databaseLib'\nimport {Button, Input,VStack, Select} from '@chakra-ui/react'\n// import {Search2Icon} from '@chakra-ui/icons'\nimport {useWeb3Context} from '../libs/Web3Context'\n\nconst DatabaseCreate = (props) => {\n  const [createDB, setCreateDB] = useState(false)\n  const {provider} = useWeb3Context()\n\n  const createNewDB = async () => {\n    let nameDB = document.getElementById('nameDB').value\n    let type = document.getElementById('type').value\n    let permissions = document.getElementById('permissions').value\n    let extra = document.getElementById('extra').value\n\n    await (\n      createDatabase(nameDB, type, permissions, provider, extra)\n      .then((hash) => {\n        console.log('Created', hash)\n        getAllDatabases().then((data) => {\n          console.log('Loaded programs', data)\n        })\n      })\n    )\n  }\n\n  return (\n    <VStack>\n      <Button\n        variant=\"outline\" colorScheme=\"white\"\n        onClick={() => setCreateDB(c => !c)}\n      >\n        Create DB\n      </Button>\n      {createDB && (\n        <VStack>\n          <Input id=\"nameDB\" placeholder=\"name\"/>\n          <Select id=\"type\">\n            <option value=\"eventlog\">EventLog</option>\n            <option value=\"keyvalue\" selected>Key:Value</option>\n            <option value=\"docstore\">Docstore</option>\n            <option value=\"counter\">Counter</option>\n          </Select>\n          <Select id=\"permissions\">\n            <option value=\"public\">Public</option>\n            <option value=\"\" selected>Only me</option>\n            <option value=\"daoHaus\" >DaoHaus control</option>\n            <option value=\"orbitdb\" >Orbit DB identity</option>\n          </Select>\n          {createDB === 'dauHaus' && (\n            <Input id=\"extra\" placeholder=\"for options\"/>\n          )}\n          <Button\n            variant=\"outline\" colorScheme=\"white\" w=\"40%\"\n            onClick={createNewDB}\n          >\n            Create!\n          </Button>\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n\nexport default DatabaseCreate\n","import React, {useState} from \"react\";\nimport {addDatabase} from \"../libs/databaseLib\";\nimport {Button, Input, IconButton, HStack,VStack} from '@chakra-ui/react';\nimport {Search2Icon} from '@chakra-ui/icons';\n\nconst DatabaseImport = () => {\n  const [open, setOpen] = useState(false)\n\n  async function add() {\n    let { value: { address } } = (\n      document.getElementById('addressInput')\n    )\n    console.log(address)\n    await addDatabase(address)\n    console.log('added!')\n    setOpen(false)\n  }\n\n  return (\n      <VStack>\n        <Button variant= 'outline' colorScheme='white' onClick={()=>setOpen(!open)}>Import DB</Button>\n        {open?\n          <HStack>\n            <Input id='addressInput' placeholder='Address' w='80%'></Input>\n            <IconButton\n              icon={<Search2Icon />}\n              colorScheme='white'\n              onClick={()=>add()}>\n            Add DB</IconButton>\n\n          </HStack>\n          :null}\n      </VStack>\n\n  );\n}\n\nexport default DatabaseImport;\n","import React, { useState, useEffect } from 'react'\nimport { getAllDatabases,  removeDatabase } from '../libs/databaseLib'\nimport { useStateValue } from '../state'\nimport EditModal from './editMode';\nimport DatabaseCreate from './databaseCreate';\nimport DatabaseImport from './databaseImport';\nimport { Table, TableCaption, Thead, Tbody, Tr,Th,Td, IconButton, HStack, VStack, Text} from \"@chakra-ui/react\";\n// import DBCard from './databaseCard'; // not usable.. had to adapt!\nimport {DeleteIcon, EditIcon, TimeIcon, ArrowBackIcon } from '@chakra-ui/icons';\nimport '../App.css';\n\n\nfunction DatabaseLocal(props) {\n  const [appState] = useStateValue();\n  const [items, setItems] = useState(appState.programs);\n  const [editModal, setEditModal] = useState(false);\n\n  async function refresh(){\n    console.log('refreshed!')\n    let allPrograms = await getAllDatabases()\n    setItems(allPrograms)\n  }\n  useEffect(()=>{\n    refresh()\n  },[appState.programs,props.db])\n\n  return (\n        <VStack>\n          <DatabaseCreate />\n          <DatabaseImport />\n\n          <HStack align='top'>\n            {appState?.programs?.length !== 0 ?\n              <div>\n                {editModal?\n                  <VStack>\n                    <IconButton\n                      colorScheme='white'\n                      aria-label='Edit DB'\n                      onClick={()=>setEditModal()}\n                      icon={<ArrowBackIcon />}\n                    >\n                    </IconButton>\n                    <EditModal\n                    user = {appState.user}\n                    address = {editModal}\n                    />\n                  </VStack>\n                :\n                <VStack>\n                <HStack>\n                  <Text color='white'>My databases</Text>\n                  <IconButton\n                  colorScheme='white'\n                  icon={<TimeIcon />}\n                  aria-label='Update DBs'\n                  onClick={()=>refresh()}></IconButton>\n                </HStack>\n\n                <Table size='sm'> {/* Make it open/close so edit will close it and show each DB and add return button */}\n                  <TableCaption>Local Databases</TableCaption>\n                  <Thead>\n                    <Tr>\n                      <Th>name</Th>\n                      <Th>Type</Th>\n                      <Th>Functions</Th>\n                    </Tr>\n                  </Thead>\n                <Tbody>\n                  {items.map(x => {return(\n                  <Tr>\n                   <Td>{x.payload.value.name}</Td>\n                   <Td>{x.payload.value.type}</Td>\n                   <Td>\n                    <IconButton\n                      colorScheme=\"white\"\n                      aria-label=\"Edit\"\n                      onClick={()=>setEditModal(x.payload.value.address)}\n                      icon={<EditIcon />}\n                      >\n                    </IconButton>\n                    <IconButton\n                      colorScheme=\"white\"\n                      aria-label=\"Delete\"\n                      onClick={()=>removeDatabase(x)}\n                      icon={<DeleteIcon />}\n                      > {/* use an alert or modal!*/}\n                    </IconButton>\n                    </Td>\n                  </Tr>\n                 )})}\n               </Tbody>\n             </Table>\n             </VStack>\n            }\n            </div>\n            :'You dont have any yet. Create your first!'}\n\n            </HStack>\n      </VStack>\n  );\n}\n\nexport default DatabaseLocal\n","import React from \"react\"; //,{useState}\nimport './App.css';\nimport { actions, StateProvider, loadingState  } from './state'\n\nimport Header from './components/header';\nimport Filters from './components/filters';\nimport DatabaseForm from './components/databaseForm';\nimport DatabaseLocal from './components/databaseLocal';\nimport { ChakraProvider, Box } from '@chakra-ui/react/';\nimport { Redirect, Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport Web3ContextProvider from \"./libs/Web3Context\";\n\n\nfunction App() {\n  const initialState = {\n    user: null,\n    db: null,\n    entries: [],\n    dbGuide: null,\n    entriesGuide: [],\n    dbDAGtest: null,\n    entriesDAGtest: [],\n    dbUsers: null,\n    entriesUsers: [],\n    programs: [],\n    orbitdbStatus: 'Starting',\n    ipfsStatus: 'Starting',\n    program: false,\n    loading: {\n      programs: false\n    }\n  }\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case actions.USER.SET_USER:\n        return {\n          ...state,\n          user: action.publicKey\n        }\n      case actions.SYSTEMS.SET_ORBITDB:\n        return {\n          ...state,\n          orbitdbStatus: action.orbitdbStatus\n        }\n      case actions.SYSTEMS.SET_IPFS:\n        return {\n          ...state,\n          ipfsStatus: action.ipfsStatus\n        }\n      case actions.DB.SET_DB:\n        return {\n          ...state,\n          db: action.db,\n          entries: action.entries,\n        }\n      case actions.DBGUIDE.SET_DBGUIDE:\n        return {\n          ...state,\n          dbGuide: action.db,\n          entriesGuide: action.entries,\n        }\n      case actions.DBDAGTEST.SET_DBDAGTEST:\n        return {\n          ...state,\n          dbDAGtest: action.db,\n          entriesDAGtest: action.entries,\n        }\n      case actions.DBUSERS.SET_DBUSERS:\n        return {\n          ...state,\n          dbUsers: action.db,\n          entriesUsers: action.entries,\n        }\n      case actions.PROGRAMS.SET_PROGRAM:\n        return {\n          ...state,\n          program: action.program\n        }\n      case actions.PROGRAMS.SET_PROGRAM_LOADING:\n        return {\n          ...state,\n          program: loadingState\n        }\n      case actions.PROGRAMS.SET_PROGRAMS:\n        return {\n          ...state,\n          programs: action.programs\n        }\n      case actions.PROGRAMS.SET_PROGRAMS_LOADING:\n        return {\n          ...state,\n          loading: { ...state.loading, programs: action.loading }\n        }\n\n      default:\n        return state\n    }\n  }\n\n// ipfs-http-client for (Electron) desktop app?\n\n// Errors and bugs:\n// db.iterator({ limit: -1 }).collect() says its not a function when empty\n\n  return (\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <ChakraProvider>\n      <Web3ContextProvider>\n        <Box\n          backgroundColor='#303030'\n          color='white'\n        >\n          <Router>\n            <Header w='100%'/>\n            <Switch>\n              <Route exact path=\"/sharedDatabases\" component={DatabaseForm} />\n              <Route exact path=\"/localDatabases\" component={DatabaseLocal} />\n              <Route path=\"/\" component={Filters} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Router>\n        </Box>\n      </Web3ContextProvider>\n{/*\n      <ul>\n        <li>Add DB of guide, which is a follow up (with alerts? or toasts?) of different parts of the app</li>\n        <li>with information taken from the database IPNS blogging style</li>\n        <li>convert ipfsObject (key-value or doc?) into a Search tool to find objects in specific DB (key: 'orbitdb' - value: orbitdb object CID to add in a classificator)</li>\n        <li><a href=\"https://github.com/orbitdb/orbit-db-access-controllers\" target='blank' rel='noopener noreferrer'>access control</a></li>\n        <li>Encryption and privacy - https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/README.md</li>\n        <li>https://github.com/QuestNetwork/qd-messages-ts</li>\n        <li>https://github.com/Peergos/Peergos</li>\n      </ul>\n*/}\n    </ChakraProvider>\n    </StateProvider>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}